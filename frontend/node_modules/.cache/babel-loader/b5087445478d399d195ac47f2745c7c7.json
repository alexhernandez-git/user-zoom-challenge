{"ast":null,"code":"var _jsxFileName = \"/Users/alexhernandezprat/code/satoshis-tech-test/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from \"react\";\nimport Layout from \"./components/Layout\";\nimport Search from \"./components/Search\";\nimport Filters from \"./components/Filters\";\nimport useGetUsers from \"./hooks/useGetUsers\";\nimport UsersList from \"./components/UsersList\";\nimport useFormikForm from \"./hooks/useSearchForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext({\n  mobileFiltersOpen: false,\n  setMobileFiltersOpen: () => {},\n  values: {\n    search: \"\",\n    nationalities: []\n  },\n  handleChange: () => {},\n  handleSubmit: () => {},\n  setFieldValue: () => {}\n});\n\nfunction App() {\n  _s();\n\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  const handleFormikSubmit = values => {\n    setSearch(values.search);\n  };\n\n  const {\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue\n  } = useFormikForm({\n    initialValues: {\n      search: \"\",\n      nationality: \"\"\n    },\n    onSubmit: handleFormikSubmit\n  });\n  useGetUsers({\n    results: 8,\n    search\n  });\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      mobileFiltersOpen,\n      setMobileFiltersOpen,\n      values,\n      handleChange,\n      handleSubmit,\n      setFieldValue\n    },\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto px-6 flex flex-col lg:px-6 mt-10\",\n        children: [/*#__PURE__*/_jsxDEV(Filters, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: `lg:col-span-8 xl:col-span-6 xl:col-start-3`,\n          children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UsersList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XVKZUiIwOiG8qdVk21mZ9IMIBhI=\", false, function () {\n  return [useFormikForm, useGetUsers];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/App.tsx"],"names":["useState","createContext","Layout","Search","Filters","useGetUsers","UsersList","useFormikForm","AppContext","mobileFiltersOpen","setMobileFiltersOpen","values","search","nationalities","handleChange","handleSubmit","setFieldValue","App","setSearch","handleFormikSubmit","initialValues","nationality","onSubmit","results"],"mappings":";;;AAAA,SACEA,QADF,EAEEC,aAFF,QAMO,OANP;AAOA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAYA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;;AAeA,OAAO,MAAMC,UAAU,gBAAGP,aAAa,CAAsB;AAC3DQ,EAAAA,iBAAiB,EAAE,KADwC;AAE3DC,EAAAA,oBAAoB,EAAE,MAAM,CAAE,CAF6B;AAG3DC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,EADF;AAENC,IAAAA,aAAa,EAAE;AAFT,GAHmD;AAO3DC,EAAAA,YAAY,EAAE,MAAM,CAAE,CAPqC;AAQ3DC,EAAAA,YAAY,EAAE,MAAM,CAAE,CARqC;AAS3DC,EAAAA,aAAa,EAAE,MAAM,CAAE;AAToC,CAAtB,CAAhC;;AAYP,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACR,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAU,KAAV,CAA1D;AACA,QAAM,CAACY,MAAD,EAASM,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAMmB,kBAAkB,GAAIR,MAAD,IAAmC;AAC5DO,IAAAA,SAAS,CAACP,MAAM,CAACC,MAAR,CAAT;AACD,GAFD;;AAIA,QAAM;AAAED,IAAAA,MAAF;AAAUG,IAAAA,YAAV;AAAwBC,IAAAA,YAAxB;AAAsCC,IAAAA;AAAtC,MAAwDT,aAAa,CAAC;AAC1Ea,IAAAA,aAAa,EAAE;AACbR,MAAAA,MAAM,EAAE,EADK;AAEbS,MAAAA,WAAW,EAAE;AAFA,KAD2D;AAK1EC,IAAAA,QAAQ,EAAEH;AALgE,GAAD,CAA3E;AAQAd,EAAAA,WAAW,CAAC;AAAEkB,IAAAA,OAAO,EAAE,CAAX;AAAcX,IAAAA;AAAd,GAAD,CAAX;AAEA,sBACE,QAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,iBADK;AAELC,MAAAA,oBAFK;AAGLC,MAAAA,MAHK;AAILG,MAAAA,YAJK;AAKLC,MAAAA,YALK;AAMLC,MAAAA;AANK,KADT;AAAA,2BAUE,QAAC,MAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE,oDAAhB;AAAA,gCAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAM,UAAA,SAAS,EAAG,4CAAlB;AAAA,kCAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA1CQC,G;UAOuDV,a,EAQ9DF,W;;;KAfOY,G;AA4CT,eAAeA,GAAf","sourcesContent":["import {\n  useState,\n  createContext,\n  useEffect,\n  ChangeEventHandler,\n  FormEventHandler,\n} from \"react\";\nimport Layout from \"./components/Layout\";\nimport Search from \"./components/Search\";\nimport Filters from \"./components/Filters\";\nimport UserCard from \"./components/UserCard\";\nimport {\n  RecoilRoot,\n  atom,\n  selector,\n  useRecoilState,\n  useRecoilValue,\n  useSetRecoilState,\n} from \"recoil\";\nimport usersState from \"./state/usersState\";\nimport axios from \"axios\";\nimport useGetUsers from \"./hooks/useGetUsers\";\nimport UsersList from \"./components/UsersList\";\nimport useFormikForm from \"./hooks/useSearchForm\";\nimport { FormikValuesInterface } from \"./types\";\n\nexport interface AppContextInterface {\n  mobileFiltersOpen: boolean;\n  setMobileFiltersOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  values: {\n    search: string;\n    nationalities: string[];\n  };\n  handleChange: ChangeEventHandler<HTMLInputElement>;\n  handleSubmit: FormEventHandler<HTMLFormElement>;\n  setFieldValue: any;\n}\n\nexport const AppContext = createContext<AppContextInterface>({\n  mobileFiltersOpen: false,\n  setMobileFiltersOpen: () => {},\n  values: {\n    search: \"\",\n    nationalities: [],\n  },\n  handleChange: () => {},\n  handleSubmit: () => {},\n  setFieldValue: () => {},\n});\n\nfunction App() {\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState<boolean>(false);\n  const [search, setSearch] = useState(\"\");\n  const handleFormikSubmit = (values: FormikValuesInterface) => {\n    setSearch(values.search);\n  };\n\n  const { values, handleChange, handleSubmit, setFieldValue } = useFormikForm({\n    initialValues: {\n      search: \"\",\n      nationality: \"\",\n    },\n    onSubmit: handleFormikSubmit,\n  });\n\n  useGetUsers({ results: 8, search });\n\n  return (\n    <AppContext.Provider\n      value={{\n        mobileFiltersOpen,\n        setMobileFiltersOpen,\n        values,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n      }}\n    >\n      <Layout>\n        <div className={\"max-w-3xl mx-auto px-6 flex flex-col lg:px-6 mt-10\"}>\n          {/* Filters */}\n          <Filters />\n          <main className={`lg:col-span-8 xl:col-span-6 xl:col-start-3`}>\n            {/* Search */}\n            <Search />\n            {/* Users List */}\n            <UsersList />\n          </main>\n        </div>\n      </Layout>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}