{"ast":null,"code":"var _jsxFileName = \"/app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from \"react\";\nimport Layout from \"./components/Layout\";\nimport Filters from \"./components/Filters\";\nimport useGetRepos from \"./hooks/useGetRepos\";\nimport useFormikForm from \"./hooks/useSearchForm\";\nimport Favourites from \"./components/FavouritesList\";\nimport useGetOrgs from \"./hooks/useGetOrgs\";\nimport useGetFavourites from \"./hooks/useGetFavourites\";\nimport ReposList from \"./components/ReposList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext({\n  filtersOpen: false,\n  setFiltersOpen: () => {},\n  favouritesOpen: false,\n  setFavouritesOpen: () => {},\n  values: {\n    org: null,\n    sort: \"\",\n    direction: \"\"\n  },\n  handleChange: () => {},\n  handleSubmit: () => {},\n  setFieldValue: () => {}\n});\n\nfunction App() {\n  _s();\n\n  const [filtersOpen, setFiltersOpen] = useState(false);\n  const [favouritesOpen, setFavouritesOpen] = useState(false);\n  const [results, setResults] = useState(8);\n  const {\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue\n  } = useFormikForm({\n    initialValues: {\n      org: null,\n      sort: \"created\",\n      direction: \"desc\"\n    },\n    onSubmit: () => {}\n  });\n  const {\n    org,\n    sort,\n    direction\n  } = values;\n  useGetRepos({\n    results,\n    sort,\n    direction,\n    org: org === null || org === void 0 ? void 0 : org.login\n  });\n  useGetOrgs({\n    results: 500\n  });\n  useGetFavourites();\n  const appContextProviderProps = {\n    filtersOpen,\n    setFiltersOpen,\n    favouritesOpen,\n    setFavouritesOpen,\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue\n  };\n  console.log(values);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: appContextProviderProps,\n    children: [/*#__PURE__*/_jsxDEV(Filters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Favourites, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto px-6 flex flex-col lg:px-6 mt-10\",\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          className: `lg:col-span-8 xl:col-span-6 xl:col-start-3`,\n          children: /*#__PURE__*/_jsxDEV(ReposList, {\n            setResults: setResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jbQ643DdrYgVIUeypnIkY3lypkM=\", false, function () {\n  return [useFormikForm, useGetRepos, useGetOrgs, useGetFavourites];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/app/src/App.tsx"],"names":["useState","createContext","Layout","Filters","useGetRepos","useFormikForm","Favourites","useGetOrgs","useGetFavourites","ReposList","AppContext","filtersOpen","setFiltersOpen","favouritesOpen","setFavouritesOpen","values","org","sort","direction","handleChange","handleSubmit","setFieldValue","App","results","setResults","initialValues","onSubmit","login","appContextProviderProps","console","log"],"mappings":"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","sourcesContent":["import { useState, createContext, useMemo } from \"react\";\nimport Layout from \"./components/Layout\";\nimport Filters from \"./components/Filters\";\nimport useGetRepos from \"./hooks/useGetRepos\";\nimport useFormikForm from \"./hooks/useSearchForm\";\nimport { AppContextInterface } from \"./types\";\nimport Favourites from \"./components/FavouritesList\";\nimport useGetOrgs from \"./hooks/useGetOrgs\";\nimport useGetFavourites from \"./hooks/useGetFavourites\";\nimport ReposList from \"./components/ReposList\";\n\nexport const AppContext = createContext<AppContextInterface>({\n  filtersOpen: false,\n  setFiltersOpen: () => {},\n  favouritesOpen: false,\n  setFavouritesOpen: () => {},\n  values: {\n    org: null,\n    sort: \"\",\n    direction: \"\",\n  },\n  handleChange: () => {},\n  handleSubmit: () => {},\n  setFieldValue: () => {},\n});\n\nfunction App() {\n  const [filtersOpen, setFiltersOpen] = useState<boolean>(false);\n  const [favouritesOpen, setFavouritesOpen] = useState<boolean>(false);\n\n  const [results, setResults] = useState<number>(8);\n  const { values, handleChange, handleSubmit, setFieldValue } = useFormikForm({\n    initialValues: {\n      org: null,\n      sort: \"created\",\n      direction: \"desc\",\n    },\n    onSubmit: () => {},\n  });\n  const { org, sort, direction } = values;\n  useGetRepos({\n    results,\n    sort,\n    direction,\n    org: org?.login,\n  });\n  useGetOrgs({ results: 500 });\n  useGetFavourites();\n\n  const appContextProviderProps = {\n    filtersOpen,\n    setFiltersOpen,\n    favouritesOpen,\n    setFavouritesOpen,\n    values,\n    handleChange,\n    handleSubmit,\n    setFieldValue,\n  };\n\n  console.log(values);\n\n  return (\n    <AppContext.Provider value={appContextProviderProps}>\n      <Filters />\n      <Favourites />\n      <Layout>\n        <div className={\"max-w-3xl mx-auto px-6 flex flex-col lg:px-6 mt-10\"}>\n          {/* Filters */}\n\n          <main className={`lg:col-span-8 xl:col-span-6 xl:col-start-3`}>\n            {/* Repos List */}\n            <ReposList setResults={setResults} />\n          </main>\n        </div>\n      </Layout>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}