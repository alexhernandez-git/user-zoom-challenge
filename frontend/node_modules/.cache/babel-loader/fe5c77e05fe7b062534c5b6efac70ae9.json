{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useFormik } from \"formik\";\n\nconst useFormikForm = _ref => {\n  _s();\n\n  let {\n    name,\n    onSubmit\n  } = _ref;\n  const {\n    handleSubmit,\n    handleChange,\n    values\n  } = useFormik({\n    initialValues: {\n      [name]: \"\"\n    },\n    enableReinitialize: true,\n    onSubmit: async values => {\n      onSubmit(values);\n    }\n  });\n  return {\n    value: values[name],\n    [\"handle\" + name.charAt(0).toUpperCase() + name.slice(1) + \"Change\"]: handleChange,\n    handleSubmit\n  };\n};\n\n_s(useFormikForm, \"f733BrNAPgdhIx/YHEy9DVMfRCc=\", false, function () {\n  return [useFormik];\n});\n\nexport default useFormikForm;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/hooks/useSearchForm.ts"],"names":["useFormik","useFormikForm","name","onSubmit","handleSubmit","handleChange","values","initialValues","enableReinitialize","value","charAt","toUpperCase","slice"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,QAA1B;;AASA,MAAMC,aAAa,GAAG,QAA4C;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA2C;AAChE,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAAyCN,SAAS,CAAC;AACvDO,IAAAA,aAAa,EAAE;AACb,OAACL,IAAD,GAAQ;AADK,KADwC;AAIvDM,IAAAA,kBAAkB,EAAE,IAJmC;AAMvDL,IAAAA,QAAQ,EAAE,MAAOG,MAAP,IAAkB;AAC1BH,MAAAA,QAAQ,CAACG,MAAD,CAAR;AACD;AARsD,GAAD,CAAxD;AAUA,SAAO;AACLG,IAAAA,KAAK,EAAEH,MAAM,CAACJ,IAAD,CADR;AAEL,KAAC,WAAWA,IAAI,CAACQ,MAAL,CAAY,CAAZ,EAAeC,WAAf,EAAX,GAA0CT,IAAI,CAACU,KAAL,CAAW,CAAX,CAA1C,GAA0D,QAA3D,GACEP,YAHG;AAILD,IAAAA;AAJK,GAAP;AAMD,CAjBD;;GAAMH,a;UAC2CD,S;;;AAkBjD,eAAeC,aAAf","sourcesContent":["import { useFormik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport * as Yup from \"yup\";\n\ninterface UseFormikInterface {\n  name: string;\n  onSubmit: Function;\n}\n\nconst useFormikForm = ({ name, onSubmit }: UseFormikInterface) => {\n  const { handleSubmit, handleChange, values } = useFormik({\n    initialValues: {\n      [name]: \"\",\n    },\n    enableReinitialize: true,\n\n    onSubmit: async (values) => {\n      onSubmit(values);\n    },\n  });\n  return {\n    value: values[name],\n    [\"handle\" + name.charAt(0).toUpperCase() + name.slice(1) + \"Change\"]:\n      handleChange,\n    handleSubmit,\n  };\n};\n\nexport default useFormikForm;\n"]},"metadata":{},"sourceType":"module"}