{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport reposState from \"../state/reposState\";\n\nconst useGetRepos = function () {\n  _s();\n\n  let {\n    results = 50,\n    nationalities = [],\n    page = 1,\n    org = \"facebook\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setRepos = useSetRecoilState(reposState);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"randomUsersData\"], () => axios.get(`https://api.github.com/orgs/${org}/repos`, {\n    headers: {\n      Authorization: \"token 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\"\n    }\n  }).then(res => console.log(res.data)).catch(err => console.log(err.response)));\n  console.log(data);\n  useEffect(() => {\n    if (isLoading) {\n      setRepos(repos => {\n        return { ...repos,\n          loading: true,\n          error: error\n        };\n      });\n    } else {\n      if (error) setRepos({ ...data,\n        loading: false,\n        error: error\n      });else {\n        if (page === 1) {\n          setRepos({ ...data,\n            loading: false,\n            error: null\n          });\n        } else {\n          setRepos(repos => ({ ...repos,\n            ...data,\n            results: [...repos.results, ...data.results],\n            loading: false,\n            error: null\n          }));\n        }\n      }\n    }\n  }, [isLoading]);\n};\n\n_s(useGetRepos, \"25rynwHFMVJuecTAioHeBBPOyRM=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetRepos;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/user-zoom-challenge/frontend/src/hooks/useGetRepos.ts"],"names":["axios","useEffect","useQuery","useSetRecoilState","reposState","useGetRepos","results","nationalities","page","org","setRepos","isLoading","error","data","get","headers","Authorization","then","res","console","log","catch","err","response","repos","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAUA,MAAMC,WAAW,GAAG,YAKa;AAAA;;AAAA,MALZ;AACnBC,IAAAA,OAAO,GAAG,EADS;AAEnBC,IAAAA,aAAa,GAAG,EAFG;AAGnBC,IAAAA,IAAI,GAAG,CAHY;AAInBC,IAAAA,GAAG,GAAG;AAJa,GAKY,uEAAP,EAAO;AAC/B,QAAMC,QAAQ,GAAGP,iBAAiB,CAACC,UAAD,CAAlC;AAEA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BX,QAAQ,CAAC,CAAC,iBAAD,CAAD,EAAsB,MAC/DF,KAAK,CACFc,GADH,CACQ,+BAA8BL,GAAI,QAD1C,EACmD;AAC/CM,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR;AADsC,GADnD,EAMGC,IANH,CAMSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,IAAhB,CANjB,EAOGQ,KAPH,CAOUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,QAAhB,CAPlB,CADyC,CAA3C;AAUAJ,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,SAAJ,EAAe;AACbD,MAAAA,QAAQ,CAAEc,KAAD,IAA2B;AAClC,eAAO,EAAE,GAAGA,KAAL;AAAYC,UAAAA,OAAO,EAAE,IAArB;AAA2Bb,UAAAA,KAAK,EAAEA;AAAlC,SAAP;AACD,OAFO,CAAR;AAGD,KAJD,MAIO;AACL,UAAIA,KAAJ,EAAWF,QAAQ,CAAC,EAAE,GAAGG,IAAL;AAAWY,QAAAA,OAAO,EAAE,KAApB;AAA2Bb,QAAAA,KAAK,EAAEA;AAAlC,OAAD,CAAR,CAAX,KACK;AACH,YAAIJ,IAAI,KAAK,CAAb,EAAgB;AACdE,UAAAA,QAAQ,CAAC,EAAE,GAAGG,IAAL;AAAWY,YAAAA,OAAO,EAAE,KAApB;AAA2Bb,YAAAA,KAAK,EAAE;AAAlC,WAAD,CAAR;AACD,SAFD,MAEO;AACLF,UAAAA,QAAQ,CAAEc,KAAD,KAA4B,EACnC,GAAGA,KADgC;AAEnC,eAAGX,IAFgC;AAGnCP,YAAAA,OAAO,EAAE,CAAC,GAAGkB,KAAK,CAAClB,OAAV,EAAmB,GAAGO,IAAI,CAACP,OAA3B,CAH0B;AAInCmB,YAAAA,OAAO,EAAE,KAJ0B;AAKnCb,YAAAA,KAAK,EAAE;AAL4B,WAA5B,CAAD,CAAR;AAOD;AACF;AACF;AACF,GArBQ,EAqBN,CAACD,SAAD,CArBM,CAAT;AAsBD,CAzCD;;GAAMN,W;UAMaF,iB,EAEkBD,Q;;;AAmCrC,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport reposState from \"../state/reposState\";\nimport { ReposInterface } from \"../types\";\n\ninterface UseGetReposInterface {\n  results?: number;\n  nationalities?: string[];\n  page?: number;\n  org?: string;\n}\n\nconst useGetRepos = ({\n  results = 50,\n  nationalities = [],\n  page = 1,\n  org = \"facebook\",\n}: UseGetReposInterface = {}) => {\n  const setRepos = useSetRecoilState(reposState);\n\n  const { isLoading, error, data } = useQuery([\"randomUsersData\"], () =>\n    axios\n      .get(`https://api.github.com/orgs/${org}/repos`, {\n        headers: {\n          Authorization: \"token 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\",\n        },\n      })\n      .then((res) => console.log(res.data))\n      .catch((err) => console.log(err.response))\n  );\n  console.log(data);\n  useEffect(() => {\n    if (isLoading) {\n      setRepos((repos: ReposInterface) => {\n        return { ...repos, loading: true, error: error };\n      });\n    } else {\n      if (error) setRepos({ ...data, loading: false, error: error });\n      else {\n        if (page === 1) {\n          setRepos({ ...data, loading: false, error: null });\n        } else {\n          setRepos((repos: ReposInterface) => ({\n            ...repos,\n            ...data,\n            results: [...repos.results, ...data.results],\n            loading: false,\n            error: null,\n          }));\n        }\n      }\n    }\n  }, [isLoading]);\n};\n\nexport default useGetRepos;\n"]},"metadata":{},"sourceType":"module"}