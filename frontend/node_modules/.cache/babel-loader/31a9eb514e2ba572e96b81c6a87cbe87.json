{"ast":null,"code":"var _jsxFileName = \"/Users/alexhernandezprat/code/satoshis-tech-test/src/components/Filters/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useContext } from \"react\";\nimport { Dialog, Disclosure, Transition } from \"@headlessui/react\";\nimport { XIcon } from \"@heroicons/react/outline\";\nimport { MinusSmIcon, PlusSmIcon } from \"@heroicons/react/solid\";\nimport { AppContext } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst filters = [{\n  id: \"nationalities\",\n  name: \"Nationalities\",\n  options: [{\n    checked: false,\n    label: \"Afghanistan\",\n    value: \"AF\"\n  }, {\n    checked: false,\n    label: \"Ã…land Islands\",\n    value: \"AX\"\n  }, {\n    checked: false,\n    label: \"Albania\",\n    value: \"AL\"\n  }, {\n    checked: false,\n    label: \"Algeria\",\n    value: \"DZ\"\n  }, {\n    checked: false,\n    label: \"American Samoa\",\n    value: \"AS\"\n  }, {\n    checked: false,\n    label: \"AndorrA\",\n    value: \"AD\"\n  }, {\n    checked: false,\n    label: \"Angola\",\n    value: \"AO\"\n  }, {\n    checked: false,\n    label: \"Anguilla\",\n    value: \"AI\"\n  }, {\n    checked: false,\n    label: \"Antarctica\",\n    value: \"AQ\"\n  }, {\n    checked: false,\n    label: \"Antigua and Barbuda\",\n    value: \"AG\"\n  }, {\n    checked: false,\n    label: \"Argentina\",\n    value: \"AR\"\n  }, {\n    checked: false,\n    label: \"Armenia\",\n    value: \"AM\"\n  }, {\n    checked: false,\n    label: \"Aruba\",\n    value: \"AW\"\n  }, {\n    checked: false,\n    label: \"Australia\",\n    value: \"AU\"\n  }, {\n    checked: false,\n    label: \"Austria\",\n    value: \"AT\"\n  }, {\n    checked: false,\n    label: \"Azerbaijan\",\n    value: \"AZ\"\n  }, {\n    checked: false,\n    label: \"Bahamas\",\n    value: \"BS\"\n  }, {\n    checked: false,\n    label: \"Bahrain\",\n    value: \"BH\"\n  }, {\n    checked: false,\n    label: \"Bangladesh\",\n    value: \"BD\"\n  }, {\n    checked: false,\n    label: \"Barbados\",\n    value: \"BB\"\n  }, {\n    checked: false,\n    label: \"Belarus\",\n    value: \"BY\"\n  }, {\n    checked: false,\n    label: \"Belgium\",\n    value: \"BE\"\n  }, {\n    checked: false,\n    label: \"Belize\",\n    value: \"BZ\"\n  }, {\n    checked: false,\n    label: \"Benin\",\n    value: \"BJ\"\n  }, {\n    checked: false,\n    label: \"Bermuda\",\n    value: \"BM\"\n  }, {\n    checked: false,\n    label: \"Bhutan\",\n    value: \"BT\"\n  }, {\n    checked: false,\n    label: \"Bolivia\",\n    value: \"BO\"\n  }, {\n    checked: false,\n    label: \"Bosnia and Herzegovina\",\n    value: \"BA\"\n  }, {\n    checked: false,\n    label: \"Botswana\",\n    value: \"BW\"\n  }, {\n    checked: false,\n    label: \"Bouvet Island\",\n    value: \"BV\"\n  }, {\n    checked: false,\n    label: \"Brazil\",\n    value: \"BR\"\n  }, {\n    checked: false,\n    label: \"British Indian Ocean Territory\",\n    value: \"IO\"\n  }, {\n    checked: false,\n    label: \"Brunei Darussalam\",\n    value: \"BN\"\n  }, {\n    checked: false,\n    label: \"Bulgaria\",\n    value: \"BG\"\n  }, {\n    checked: false,\n    label: \"Burkina Faso\",\n    value: \"BF\"\n  }, {\n    checked: false,\n    label: \"Burundi\",\n    value: \"BI\"\n  }, {\n    checked: false,\n    label: \"Cambodia\",\n    value: \"KH\"\n  }, {\n    checked: false,\n    label: \"Cameroon\",\n    value: \"CM\"\n  }, {\n    checked: false,\n    label: \"Canada\",\n    value: \"CA\"\n  }, {\n    checked: false,\n    label: \"Cape Verde\",\n    value: \"CV\"\n  }, {\n    checked: false,\n    label: \"Cayman Islands\",\n    value: \"KY\"\n  }, {\n    checked: false,\n    label: \"Central African Republic\",\n    value: \"CF\"\n  }, {\n    checked: false,\n    label: \"Chad\",\n    value: \"TD\"\n  }, {\n    checked: false,\n    label: \"Chile\",\n    value: \"CL\"\n  }, {\n    checked: false,\n    label: \"China\",\n    value: \"CN\"\n  }, {\n    checked: false,\n    label: \"Christmas Island\",\n    value: \"CX\"\n  }, {\n    checked: false,\n    label: \"Cocos (Keeling) Islands\",\n    value: \"CC\"\n  }, {\n    checked: false,\n    label: \"Colombia\",\n    value: \"CO\"\n  }, {\n    checked: false,\n    label: \"Comoros\",\n    value: \"KM\"\n  }, {\n    checked: false,\n    label: \"Congo\",\n    value: \"CG\"\n  }, {\n    checked: false,\n    label: \"Congo, The Democratic Republic of the\",\n    value: \"CD\"\n  }, {\n    checked: false,\n    label: \"Cook Islands\",\n    value: \"CK\"\n  }, {\n    checked: false,\n    label: \"Costa Rica\",\n    value: \"CR\"\n  }, {\n    checked: false,\n    label: \"Cote D'Ivoire\",\n    value: \"CI\"\n  }, {\n    checked: false,\n    label: \"Croatia\",\n    value: \"HR\"\n  }, {\n    checked: false,\n    label: \"Cuba\",\n    value: \"CU\"\n  }, {\n    checked: false,\n    label: \"Cyprus\",\n    value: \"CY\"\n  }, {\n    checked: false,\n    label: \"Czech Republic\",\n    value: \"CZ\"\n  }, {\n    checked: false,\n    label: \"Denmark\",\n    value: \"DK\"\n  }, {\n    checked: false,\n    label: \"Djibouti\",\n    value: \"DJ\"\n  }, {\n    checked: false,\n    label: \"Dominica\",\n    value: \"DM\"\n  }, {\n    checked: false,\n    label: \"Dominican Republic\",\n    value: \"DO\"\n  }, {\n    checked: false,\n    label: \"Ecuador\",\n    value: \"EC\"\n  }, {\n    checked: false,\n    label: \"Egypt\",\n    value: \"EG\"\n  }, {\n    checked: false,\n    label: \"El Salvador\",\n    value: \"SV\"\n  }, {\n    checked: false,\n    label: \"Equatorial Guinea\",\n    value: \"GQ\"\n  }, {\n    checked: false,\n    label: \"Eritrea\",\n    value: \"ER\"\n  }, {\n    checked: false,\n    label: \"Estonia\",\n    value: \"EE\"\n  }, {\n    checked: false,\n    label: \"Ethiopia\",\n    value: \"ET\"\n  }, {\n    checked: false,\n    label: \"Falkland Islands (Malvinas)\",\n    value: \"FK\"\n  }, {\n    checked: false,\n    label: \"Faroe Islands\",\n    value: \"FO\"\n  }, {\n    checked: false,\n    label: \"Fiji\",\n    value: \"FJ\"\n  }, {\n    checked: false,\n    label: \"Finland\",\n    value: \"FI\"\n  }, {\n    checked: false,\n    label: \"France\",\n    value: \"FR\"\n  }, {\n    checked: false,\n    label: \"French Guiana\",\n    value: \"GF\"\n  }, {\n    checked: false,\n    label: \"French Polynesia\",\n    value: \"PF\"\n  }, {\n    checked: false,\n    label: \"French Southern Territories\",\n    value: \"TF\"\n  }, {\n    checked: false,\n    label: \"Gabon\",\n    value: \"GA\"\n  }, {\n    checked: false,\n    label: \"Gambia\",\n    value: \"GM\"\n  }, {\n    checked: false,\n    label: \"Georgia\",\n    value: \"GE\"\n  }, {\n    checked: false,\n    label: \"Germany\",\n    value: \"DE\"\n  }, {\n    checked: false,\n    label: \"Ghana\",\n    value: \"GH\"\n  }, {\n    checked: false,\n    label: \"Gibraltar\",\n    value: \"GI\"\n  }, {\n    checked: false,\n    label: \"Greece\",\n    value: \"GR\"\n  }, {\n    checked: false,\n    label: \"Greenland\",\n    value: \"GL\"\n  }, {\n    checked: false,\n    label: \"Grenada\",\n    value: \"GD\"\n  }, {\n    checked: false,\n    label: \"Guadeloupe\",\n    value: \"GP\"\n  }, {\n    checked: false,\n    label: \"Guam\",\n    value: \"GU\"\n  }, {\n    checked: false,\n    label: \"Guatemala\",\n    value: \"GT\"\n  }, {\n    checked: false,\n    label: \"Guernsey\",\n    value: \"GG\"\n  }, {\n    checked: false,\n    label: \"Guinea\",\n    value: \"GN\"\n  }, {\n    checked: false,\n    label: \"Guinea-Bissau\",\n    value: \"GW\"\n  }, {\n    checked: false,\n    label: \"Guyana\",\n    value: \"GY\"\n  }, {\n    checked: false,\n    label: \"Haiti\",\n    value: \"HT\"\n  }, {\n    checked: false,\n    label: \"Heard Island and Mcdonald Islands\",\n    value: \"HM\"\n  }, {\n    checked: false,\n    label: \"Holy See (Vatican City State)\",\n    value: \"VA\"\n  }, {\n    checked: false,\n    label: \"Honduras\",\n    value: \"HN\"\n  }, {\n    checked: false,\n    label: \"Hong Kong\",\n    value: \"HK\"\n  }, {\n    checked: false,\n    label: \"Hungary\",\n    value: \"HU\"\n  }, {\n    checked: false,\n    label: \"Iceland\",\n    value: \"IS\"\n  }, {\n    checked: false,\n    label: \"India\",\n    value: \"IN\"\n  }, {\n    checked: false,\n    label: \"Indonesia\",\n    value: \"ID\"\n  }, {\n    checked: false,\n    label: \"Iran, Islamic Republic Of\",\n    value: \"IR\"\n  }, {\n    checked: false,\n    label: \"Iraq\",\n    value: \"IQ\"\n  }, {\n    checked: false,\n    label: \"Ireland\",\n    value: \"IE\"\n  }, {\n    checked: false,\n    label: \"Isle of Man\",\n    value: \"IM\"\n  }, {\n    checked: false,\n    label: \"Israel\",\n    value: \"IL\"\n  }, {\n    checked: false,\n    label: \"Italy\",\n    value: \"IT\"\n  }, {\n    checked: false,\n    label: \"Jamaica\",\n    value: \"JM\"\n  }, {\n    checked: false,\n    label: \"Japan\",\n    value: \"JP\"\n  }, {\n    checked: false,\n    label: \"Jersey\",\n    value: \"JE\"\n  }, {\n    checked: false,\n    label: \"Jordan\",\n    value: \"JO\"\n  }, {\n    checked: false,\n    label: \"Kazakhstan\",\n    value: \"KZ\"\n  }, {\n    checked: false,\n    label: \"Kenya\",\n    value: \"KE\"\n  }, {\n    checked: false,\n    label: \"Kiribati\",\n    value: \"KI\"\n  }, {\n    checked: false,\n    label: \"Korea, Democratic People'S Republic of\",\n    value: \"KP\"\n  }, {\n    checked: false,\n    label: \"Korea, Republic of\",\n    value: \"KR\"\n  }, {\n    checked: false,\n    label: \"Kuwait\",\n    value: \"KW\"\n  }, {\n    checked: false,\n    label: \"Kyrgyzstan\",\n    value: \"KG\"\n  }, {\n    checked: false,\n    label: \"Lao People'S Democratic Republic\",\n    value: \"LA\"\n  }, {\n    checked: false,\n    label: \"Latvia\",\n    value: \"LV\"\n  }, {\n    checked: false,\n    label: \"Lebanon\",\n    value: \"LB\"\n  }, {\n    checked: false,\n    label: \"Lesotho\",\n    value: \"LS\"\n  }, {\n    checked: false,\n    label: \"Liberia\",\n    value: \"LR\"\n  }, {\n    checked: false,\n    label: \"Libyan Arab Jamahiriya\",\n    value: \"LY\"\n  }, {\n    checked: false,\n    label: \"Liechtenstein\",\n    value: \"LI\"\n  }, {\n    checked: false,\n    label: \"Lithuania\",\n    value: \"LT\"\n  }, {\n    checked: false,\n    label: \"Luxembourg\",\n    value: \"LU\"\n  }, {\n    checked: false,\n    label: \"Macao\",\n    value: \"MO\"\n  }, {\n    checked: false,\n    label: \"Macedonia, The Former Yugoslav Republic of\",\n    value: \"MK\"\n  }, {\n    checked: false,\n    label: \"Madagascar\",\n    value: \"MG\"\n  }, {\n    checked: false,\n    label: \"Malawi\",\n    value: \"MW\"\n  }, {\n    checked: false,\n    label: \"Malaysia\",\n    value: \"MY\"\n  }, {\n    checked: false,\n    label: \"Maldives\",\n    value: \"MV\"\n  }, {\n    checked: false,\n    label: \"Mali\",\n    value: \"ML\"\n  }, {\n    checked: false,\n    label: \"Malta\",\n    value: \"MT\"\n  }, {\n    checked: false,\n    label: \"Marshall Islands\",\n    value: \"MH\"\n  }, {\n    checked: false,\n    label: \"Martinique\",\n    value: \"MQ\"\n  }, {\n    checked: false,\n    label: \"Mauritania\",\n    value: \"MR\"\n  }, {\n    checked: false,\n    label: \"Mauritius\",\n    value: \"MU\"\n  }, {\n    checked: false,\n    label: \"Mayotte\",\n    value: \"YT\"\n  }, {\n    checked: false,\n    label: \"Mexico\",\n    value: \"MX\"\n  }, {\n    checked: false,\n    label: \"Micronesia, Federated States of\",\n    value: \"FM\"\n  }, {\n    checked: false,\n    label: \"Moldova, Republic of\",\n    value: \"MD\"\n  }, {\n    checked: false,\n    label: \"Monaco\",\n    value: \"MC\"\n  }, {\n    checked: false,\n    label: \"Mongolia\",\n    value: \"MN\"\n  }, {\n    checked: false,\n    label: \"Montserrat\",\n    value: \"MS\"\n  }, {\n    checked: false,\n    label: \"Morocco\",\n    value: \"MA\"\n  }, {\n    checked: false,\n    label: \"Mozambique\",\n    value: \"MZ\"\n  }, {\n    checked: false,\n    label: \"Myanmar\",\n    value: \"MM\"\n  }, {\n    checked: false,\n    label: \"Namibia\",\n    value: \"NA\"\n  }, {\n    checked: false,\n    label: \"Nauru\",\n    value: \"NR\"\n  }, {\n    checked: false,\n    label: \"Nepal\",\n    value: \"NP\"\n  }, {\n    checked: false,\n    label: \"Netherlands\",\n    value: \"NL\"\n  }, {\n    checked: false,\n    label: \"Netherlands Antilles\",\n    value: \"AN\"\n  }, {\n    checked: false,\n    label: \"New Caledonia\",\n    value: \"NC\"\n  }, {\n    checked: false,\n    label: \"New Zealand\",\n    value: \"NZ\"\n  }, {\n    checked: false,\n    label: \"Nicaragua\",\n    value: \"NI\"\n  }, {\n    checked: false,\n    label: \"Niger\",\n    value: \"NE\"\n  }, {\n    checked: false,\n    label: \"Nigeria\",\n    value: \"NG\"\n  }, {\n    checked: false,\n    label: \"Niue\",\n    value: \"NU\"\n  }, {\n    checked: false,\n    label: \"Norfolk Island\",\n    value: \"NF\"\n  }, {\n    checked: false,\n    label: \"Northern Mariana Islands\",\n    value: \"MP\"\n  }, {\n    checked: false,\n    label: \"Norway\",\n    value: \"NO\"\n  }, {\n    checked: false,\n    label: \"Oman\",\n    value: \"OM\"\n  }, {\n    checked: false,\n    label: \"Pakistan\",\n    value: \"PK\"\n  }, {\n    checked: false,\n    label: \"Palau\",\n    value: \"PW\"\n  }, {\n    checked: false,\n    label: \"Palestinian Territory, Occupied\",\n    value: \"PS\"\n  }, {\n    checked: false,\n    label: \"Panama\",\n    value: \"PA\"\n  }, {\n    checked: false,\n    label: \"Papua New Guinea\",\n    value: \"PG\"\n  }, {\n    checked: false,\n    label: \"Paraguay\",\n    value: \"PY\"\n  }, {\n    checked: false,\n    label: \"Peru\",\n    value: \"PE\"\n  }, {\n    checked: false,\n    label: \"Philippines\",\n    value: \"PH\"\n  }, {\n    checked: false,\n    label: \"Pitcairn\",\n    value: \"PN\"\n  }, {\n    checked: false,\n    label: \"Poland\",\n    value: \"PL\"\n  }, {\n    checked: false,\n    label: \"Portugal\",\n    value: \"PT\"\n  }, {\n    checked: false,\n    label: \"Puerto Rico\",\n    value: \"PR\"\n  }, {\n    checked: false,\n    label: \"Qatar\",\n    value: \"QA\"\n  }, {\n    checked: false,\n    label: \"Reunion\",\n    value: \"RE\"\n  }, {\n    checked: false,\n    label: \"Romania\",\n    value: \"RO\"\n  }, {\n    checked: false,\n    label: \"Russian Federation\",\n    value: \"RU\"\n  }, {\n    checked: false,\n    label: \"RWANDA\",\n    value: \"RW\"\n  }, {\n    checked: false,\n    label: \"Saint Helena\",\n    value: \"SH\"\n  }, {\n    checked: false,\n    label: \"Saint Kitts and Nevis\",\n    value: \"KN\"\n  }, {\n    checked: false,\n    label: \"Saint Lucia\",\n    value: \"LC\"\n  }, {\n    checked: false,\n    label: \"Saint Pierre and Miquelon\",\n    value: \"PM\"\n  }, {\n    checked: false,\n    label: \"Saint Vincent and the Grenadines\",\n    value: \"VC\"\n  }, {\n    checked: false,\n    label: \"Samoa\",\n    value: \"WS\"\n  }, {\n    checked: false,\n    label: \"San Marino\",\n    value: \"SM\"\n  }, {\n    checked: false,\n    label: \"Sao Tome and Principe\",\n    value: \"ST\"\n  }, {\n    checked: false,\n    label: \"Saudi Arabia\",\n    value: \"SA\"\n  }, {\n    checked: false,\n    label: \"Senegal\",\n    value: \"SN\"\n  }, {\n    checked: false,\n    label: \"Serbia and Montenegro\",\n    value: \"CS\"\n  }, {\n    checked: false,\n    label: \"Seychelles\",\n    value: \"SC\"\n  }, {\n    checked: false,\n    label: \"Sierra Leone\",\n    value: \"SL\"\n  }, {\n    checked: false,\n    label: \"Singapore\",\n    value: \"SG\"\n  }, {\n    checked: false,\n    label: \"Slovakia\",\n    value: \"SK\"\n  }, {\n    checked: false,\n    label: \"Slovenia\",\n    value: \"SI\"\n  }, {\n    checked: false,\n    label: \"Solomon Islands\",\n    value: \"SB\"\n  }, {\n    checked: false,\n    label: \"Somalia\",\n    value: \"SO\"\n  }, {\n    checked: false,\n    label: \"South Africa\",\n    value: \"ZA\"\n  }, {\n    checked: false,\n    label: \"South Georgia and the South Sandwich Islands\",\n    value: \"GS\"\n  }, {\n    checked: false,\n    label: \"Spain\",\n    value: \"ES\"\n  }, {\n    checked: false,\n    label: \"Sri Lanka\",\n    value: \"LK\"\n  }, {\n    checked: false,\n    label: \"Sudan\",\n    value: \"SD\"\n  }, {\n    checked: false,\n    label: \"Surichecked: false,label\",\n    value: \"SR\"\n  }, {\n    checked: false,\n    label: \"Svalbard and Jan Mayen\",\n    value: \"SJ\"\n  }, {\n    checked: false,\n    label: \"Swaziland\",\n    value: \"SZ\"\n  }, {\n    checked: false,\n    label: \"Sweden\",\n    value: \"SE\"\n  }, {\n    checked: false,\n    label: \"Switzerland\",\n    value: \"CH\"\n  }, {\n    checked: false,\n    label: \"Syrian Arab Republic\",\n    value: \"SY\"\n  }, {\n    checked: false,\n    label: \"Taiwan, Province of China\",\n    value: \"TW\"\n  }, {\n    checked: false,\n    label: \"Tajikistan\",\n    value: \"TJ\"\n  }, {\n    checked: false,\n    label: \"Tanzania, United Republic of\",\n    value: \"TZ\"\n  }, {\n    checked: false,\n    label: \"Thailand\",\n    value: \"TH\"\n  }, {\n    checked: false,\n    label: \"Timor-Leste\",\n    value: \"TL\"\n  }, {\n    checked: false,\n    label: \"Togo\",\n    value: \"TG\"\n  }, {\n    checked: false,\n    label: \"Tokelau\",\n    value: \"TK\"\n  }, {\n    checked: false,\n    label: \"Tonga\",\n    value: \"TO\"\n  }, {\n    checked: false,\n    label: \"Trinidad and Tobago\",\n    value: \"TT\"\n  }, {\n    checked: false,\n    label: \"Tunisia\",\n    value: \"TN\"\n  }, {\n    checked: false,\n    label: \"Turkey\",\n    value: \"TR\"\n  }, {\n    checked: false,\n    label: \"Turkmenistan\",\n    value: \"TM\"\n  }, {\n    checked: false,\n    label: \"Turks and Caicos Islands\",\n    value: \"TC\"\n  }, {\n    checked: false,\n    label: \"Tuvalu\",\n    value: \"TV\"\n  }, {\n    checked: false,\n    label: \"Uganda\",\n    value: \"UG\"\n  }, {\n    checked: false,\n    label: \"Ukraine\",\n    value: \"UA\"\n  }, {\n    checked: false,\n    label: \"United Arab Emirates\",\n    value: \"AE\"\n  }, {\n    checked: false,\n    label: \"United Kingdom\",\n    value: \"GB\"\n  }, {\n    checked: false,\n    label: \"United States\",\n    value: \"US\"\n  }, {\n    checked: false,\n    label: \"United States Minor Outlying Islands\",\n    value: \"UM\"\n  }, {\n    checked: false,\n    label: \"Uruguay\",\n    value: \"UY\"\n  }, {\n    checked: false,\n    label: \"Uzbekistan\",\n    value: \"UZ\"\n  }, {\n    checked: false,\n    label: \"Vanuatu\",\n    value: \"VU\"\n  }, {\n    checked: false,\n    label: \"Venezuela\",\n    value: \"VE\"\n  }, {\n    checked: false,\n    label: \"Viet Nam\",\n    value: \"VN\"\n  }, {\n    checked: false,\n    label: \"Virgin Islands, British\",\n    value: \"VG\"\n  }, {\n    checked: false,\n    label: \"Virgin Islands, U.S.\",\n    value: \"VI\"\n  }, {\n    checked: false,\n    label: \"Wallis and Futuna\",\n    value: \"WF\"\n  }, {\n    checked: false,\n    label: \"Western Sahara\",\n    value: \"EH\"\n  }, {\n    checked: false,\n    label: \"Yemen\",\n    value: \"YE\"\n  }, {\n    checked: false,\n    label: \"Zambia\",\n    value: \"ZM\"\n  }, {\n    checked: false,\n    label: \"Zimbabwe\",\n    value: \"ZW\"\n  }]\n}];\n\nconst Filters = () => {\n  _s();\n\n  const {\n    mobileFiltersOpen,\n    setMobileFiltersOpen,\n    values: {\n      nationality\n    },\n    handleChange,\n    handleSubmit\n  } = useContext(AppContext);\n\n  const handleCheck = e => {\n    const value = e.target.value;\n    const isChecked = e.target.checked;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Transition.Root, {\n    show: mobileFiltersOpen,\n    as: Fragment,\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      as: \"div\",\n      className: \"fixed inset-0 flex z-40\",\n      onClose: setMobileFiltersOpen,\n      children: [/*#__PURE__*/_jsxDEV(Transition.Child, {\n        as: Fragment,\n        enter: \"transition-opacity ease-linear duration-300\",\n        enterFrom: \"opacity-0\",\n        enterTo: \"opacity-100\",\n        leave: \"transition-opacity ease-linear duration-300\",\n        leaveFrom: \"opacity-100\",\n        leaveTo: \"opacity-0\",\n        children: /*#__PURE__*/_jsxDEV(Dialog.Overlay, {\n          className: \"fixed inset-0 bg-black bg-opacity-25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Transition.Child, {\n        as: Fragment,\n        enter: \"transition ease-in-out duration-300 transform\",\n        enterFrom: \"translate-x-full\",\n        enterTo: \"translate-x-0\",\n        leave: \"transition ease-in-out duration-300 transform\",\n        leaveFrom: \"translate-x-0\",\n        leaveTo: \"translate-x-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-auto relative max-w-xs w-full h-full bg-white dark:bg-gray-700 shadow-xl py-4 pb-12 flex flex-col overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4 flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-medium text-gray-900 dark:text-gray-100\",\n              children: \"Filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"-mr-2 w-10 h-10 bg-white dark:bg-gray-800 p-2 rounded-md flex items-center justify-center text-gray-400\",\n              onClick: () => setMobileFiltersOpen(false),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sr-only\",\n                children: \"Close menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(XIcon, {\n                className: \"h-6 w-6\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"mt-4 border-t border-gray-200 dark:border-gray-900\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"sr-only\",\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this), filters.map(section => /*#__PURE__*/_jsxDEV(Disclosure, {\n              as: \"div\",\n              defaultOpen: true,\n              className: \"border-t border-gray-200 dark:border-gray-900 px-4 py-6\",\n              children: _ref => {\n                let {\n                  open\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"-mx-2 -my-3 flow-root\",\n                    children: /*#__PURE__*/_jsxDEV(Disclosure.Button, {\n                      className: \"px-2 py-3 bg-white dark:bg-gray-700 w-full flex items-center justify-between text-gray-400 hover:text-gray-500\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"font-medium text-gray-900 dark:text-gray-100\",\n                        children: section.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 363,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"ml-6 flex items-center\",\n                        children: open ? /*#__PURE__*/_jsxDEV(MinusSmIcon, {\n                          className: \"h-5 w-5\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 368,\n                          columnNumber: 31\n                        }, this) : /*#__PURE__*/_jsxDEV(PlusSmIcon, {\n                          className: \"h-5 w-5\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 370,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 362,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Disclosure.Panel, {\n                    className: \"pt-6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-6\",\n                      children: section.options.map((option, optionIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          id: `filter-mobile-${section.id}-${optionIdx}`,\n                          name: `${section.id}[]`,\n                          onChange: handleCheck,\n                          defaultValue: option.value,\n                          type: \"checkbox\",\n                          defaultChecked: option.checked,\n                          className: \"h-4 w-4 border-gray-300 rounded text-orange-500 focus:ring-orange-400\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 382,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: `filter-mobile-${section.id}-${optionIdx}`,\n                          className: \"ml-3 min-w-0 flex-1 text-gray-500 dark:text-gray-200\",\n                          children: option.label\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 391,\n                          columnNumber: 31\n                        }, this)]\n                      }, option.value, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 29\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true);\n              }\n            }, section.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Filters, \"F1Pt+7WE8SrBLxNbui9JqGvwPKQ=\");\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/components/Filters/index.tsx"],"names":["Fragment","useContext","Dialog","Disclosure","Transition","XIcon","MinusSmIcon","PlusSmIcon","AppContext","filters","id","name","options","checked","label","value","Filters","mobileFiltersOpen","setMobileFiltersOpen","values","nationality","handleChange","handleSubmit","handleCheck","e","target","isChecked","map","section","open","option","optionIdx"],"mappings":"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","sourcesContent":["import { ChangeEventHandler, Fragment, useContext } from \"react\";\nimport { Dialog, Disclosure, Transition } from \"@headlessui/react\";\nimport { XIcon } from \"@heroicons/react/outline\";\nimport { MinusSmIcon, PlusSmIcon } from \"@heroicons/react/solid\";\nimport { AppContext } from \"../../App\";\n\nconst filters = [\n  {\n    id: \"nationalities\",\n    name: \"Nationalities\",\n    options: [\n      { checked: false, label: \"Afghanistan\", value: \"AF\" },\n      { checked: false, label: \"Ã…land Islands\", value: \"AX\" },\n      { checked: false, label: \"Albania\", value: \"AL\" },\n      { checked: false, label: \"Algeria\", value: \"DZ\" },\n      { checked: false, label: \"American Samoa\", value: \"AS\" },\n      { checked: false, label: \"AndorrA\", value: \"AD\" },\n      { checked: false, label: \"Angola\", value: \"AO\" },\n      { checked: false, label: \"Anguilla\", value: \"AI\" },\n      { checked: false, label: \"Antarctica\", value: \"AQ\" },\n      { checked: false, label: \"Antigua and Barbuda\", value: \"AG\" },\n      { checked: false, label: \"Argentina\", value: \"AR\" },\n      { checked: false, label: \"Armenia\", value: \"AM\" },\n      { checked: false, label: \"Aruba\", value: \"AW\" },\n      { checked: false, label: \"Australia\", value: \"AU\" },\n      { checked: false, label: \"Austria\", value: \"AT\" },\n      { checked: false, label: \"Azerbaijan\", value: \"AZ\" },\n      { checked: false, label: \"Bahamas\", value: \"BS\" },\n      { checked: false, label: \"Bahrain\", value: \"BH\" },\n      { checked: false, label: \"Bangladesh\", value: \"BD\" },\n      { checked: false, label: \"Barbados\", value: \"BB\" },\n      { checked: false, label: \"Belarus\", value: \"BY\" },\n      { checked: false, label: \"Belgium\", value: \"BE\" },\n      { checked: false, label: \"Belize\", value: \"BZ\" },\n      { checked: false, label: \"Benin\", value: \"BJ\" },\n      { checked: false, label: \"Bermuda\", value: \"BM\" },\n      { checked: false, label: \"Bhutan\", value: \"BT\" },\n      { checked: false, label: \"Bolivia\", value: \"BO\" },\n      { checked: false, label: \"Bosnia and Herzegovina\", value: \"BA\" },\n      { checked: false, label: \"Botswana\", value: \"BW\" },\n      { checked: false, label: \"Bouvet Island\", value: \"BV\" },\n      { checked: false, label: \"Brazil\", value: \"BR\" },\n      { checked: false, label: \"British Indian Ocean Territory\", value: \"IO\" },\n      { checked: false, label: \"Brunei Darussalam\", value: \"BN\" },\n      { checked: false, label: \"Bulgaria\", value: \"BG\" },\n      { checked: false, label: \"Burkina Faso\", value: \"BF\" },\n      { checked: false, label: \"Burundi\", value: \"BI\" },\n      { checked: false, label: \"Cambodia\", value: \"KH\" },\n      { checked: false, label: \"Cameroon\", value: \"CM\" },\n      { checked: false, label: \"Canada\", value: \"CA\" },\n      { checked: false, label: \"Cape Verde\", value: \"CV\" },\n      { checked: false, label: \"Cayman Islands\", value: \"KY\" },\n      { checked: false, label: \"Central African Republic\", value: \"CF\" },\n      { checked: false, label: \"Chad\", value: \"TD\" },\n      { checked: false, label: \"Chile\", value: \"CL\" },\n      { checked: false, label: \"China\", value: \"CN\" },\n      { checked: false, label: \"Christmas Island\", value: \"CX\" },\n      { checked: false, label: \"Cocos (Keeling) Islands\", value: \"CC\" },\n      { checked: false, label: \"Colombia\", value: \"CO\" },\n      { checked: false, label: \"Comoros\", value: \"KM\" },\n      { checked: false, label: \"Congo\", value: \"CG\" },\n      {\n        checked: false,\n        label: \"Congo, The Democratic Republic of the\",\n        value: \"CD\",\n      },\n      { checked: false, label: \"Cook Islands\", value: \"CK\" },\n      { checked: false, label: \"Costa Rica\", value: \"CR\" },\n      { checked: false, label: \"Cote D'Ivoire\", value: \"CI\" },\n      { checked: false, label: \"Croatia\", value: \"HR\" },\n      { checked: false, label: \"Cuba\", value: \"CU\" },\n      { checked: false, label: \"Cyprus\", value: \"CY\" },\n      { checked: false, label: \"Czech Republic\", value: \"CZ\" },\n      { checked: false, label: \"Denmark\", value: \"DK\" },\n      { checked: false, label: \"Djibouti\", value: \"DJ\" },\n      { checked: false, label: \"Dominica\", value: \"DM\" },\n      { checked: false, label: \"Dominican Republic\", value: \"DO\" },\n      { checked: false, label: \"Ecuador\", value: \"EC\" },\n      { checked: false, label: \"Egypt\", value: \"EG\" },\n      { checked: false, label: \"El Salvador\", value: \"SV\" },\n      { checked: false, label: \"Equatorial Guinea\", value: \"GQ\" },\n      { checked: false, label: \"Eritrea\", value: \"ER\" },\n      { checked: false, label: \"Estonia\", value: \"EE\" },\n      { checked: false, label: \"Ethiopia\", value: \"ET\" },\n      { checked: false, label: \"Falkland Islands (Malvinas)\", value: \"FK\" },\n      { checked: false, label: \"Faroe Islands\", value: \"FO\" },\n      { checked: false, label: \"Fiji\", value: \"FJ\" },\n      { checked: false, label: \"Finland\", value: \"FI\" },\n      { checked: false, label: \"France\", value: \"FR\" },\n      { checked: false, label: \"French Guiana\", value: \"GF\" },\n      { checked: false, label: \"French Polynesia\", value: \"PF\" },\n      { checked: false, label: \"French Southern Territories\", value: \"TF\" },\n      { checked: false, label: \"Gabon\", value: \"GA\" },\n      { checked: false, label: \"Gambia\", value: \"GM\" },\n      { checked: false, label: \"Georgia\", value: \"GE\" },\n      { checked: false, label: \"Germany\", value: \"DE\" },\n      { checked: false, label: \"Ghana\", value: \"GH\" },\n      { checked: false, label: \"Gibraltar\", value: \"GI\" },\n      { checked: false, label: \"Greece\", value: \"GR\" },\n      { checked: false, label: \"Greenland\", value: \"GL\" },\n      { checked: false, label: \"Grenada\", value: \"GD\" },\n      { checked: false, label: \"Guadeloupe\", value: \"GP\" },\n      { checked: false, label: \"Guam\", value: \"GU\" },\n      { checked: false, label: \"Guatemala\", value: \"GT\" },\n      { checked: false, label: \"Guernsey\", value: \"GG\" },\n      { checked: false, label: \"Guinea\", value: \"GN\" },\n      { checked: false, label: \"Guinea-Bissau\", value: \"GW\" },\n      { checked: false, label: \"Guyana\", value: \"GY\" },\n      { checked: false, label: \"Haiti\", value: \"HT\" },\n      {\n        checked: false,\n        label: \"Heard Island and Mcdonald Islands\",\n        value: \"HM\",\n      },\n      { checked: false, label: \"Holy See (Vatican City State)\", value: \"VA\" },\n      { checked: false, label: \"Honduras\", value: \"HN\" },\n      { checked: false, label: \"Hong Kong\", value: \"HK\" },\n      { checked: false, label: \"Hungary\", value: \"HU\" },\n      { checked: false, label: \"Iceland\", value: \"IS\" },\n      { checked: false, label: \"India\", value: \"IN\" },\n      { checked: false, label: \"Indonesia\", value: \"ID\" },\n      { checked: false, label: \"Iran, Islamic Republic Of\", value: \"IR\" },\n      { checked: false, label: \"Iraq\", value: \"IQ\" },\n      { checked: false, label: \"Ireland\", value: \"IE\" },\n      { checked: false, label: \"Isle of Man\", value: \"IM\" },\n      { checked: false, label: \"Israel\", value: \"IL\" },\n      { checked: false, label: \"Italy\", value: \"IT\" },\n      { checked: false, label: \"Jamaica\", value: \"JM\" },\n      { checked: false, label: \"Japan\", value: \"JP\" },\n      { checked: false, label: \"Jersey\", value: \"JE\" },\n      { checked: false, label: \"Jordan\", value: \"JO\" },\n      { checked: false, label: \"Kazakhstan\", value: \"KZ\" },\n      { checked: false, label: \"Kenya\", value: \"KE\" },\n      { checked: false, label: \"Kiribati\", value: \"KI\" },\n      {\n        checked: false,\n        label: \"Korea, Democratic People'S Republic of\",\n        value: \"KP\",\n      },\n      { checked: false, label: \"Korea, Republic of\", value: \"KR\" },\n      { checked: false, label: \"Kuwait\", value: \"KW\" },\n      { checked: false, label: \"Kyrgyzstan\", value: \"KG\" },\n      {\n        checked: false,\n        label: \"Lao People'S Democratic Republic\",\n        value: \"LA\",\n      },\n      { checked: false, label: \"Latvia\", value: \"LV\" },\n      { checked: false, label: \"Lebanon\", value: \"LB\" },\n      { checked: false, label: \"Lesotho\", value: \"LS\" },\n      { checked: false, label: \"Liberia\", value: \"LR\" },\n      { checked: false, label: \"Libyan Arab Jamahiriya\", value: \"LY\" },\n      { checked: false, label: \"Liechtenstein\", value: \"LI\" },\n      { checked: false, label: \"Lithuania\", value: \"LT\" },\n      { checked: false, label: \"Luxembourg\", value: \"LU\" },\n      { checked: false, label: \"Macao\", value: \"MO\" },\n      {\n        checked: false,\n        label: \"Macedonia, The Former Yugoslav Republic of\",\n        value: \"MK\",\n      },\n      { checked: false, label: \"Madagascar\", value: \"MG\" },\n      { checked: false, label: \"Malawi\", value: \"MW\" },\n      { checked: false, label: \"Malaysia\", value: \"MY\" },\n      { checked: false, label: \"Maldives\", value: \"MV\" },\n      { checked: false, label: \"Mali\", value: \"ML\" },\n      { checked: false, label: \"Malta\", value: \"MT\" },\n      { checked: false, label: \"Marshall Islands\", value: \"MH\" },\n      { checked: false, label: \"Martinique\", value: \"MQ\" },\n      { checked: false, label: \"Mauritania\", value: \"MR\" },\n      { checked: false, label: \"Mauritius\", value: \"MU\" },\n      { checked: false, label: \"Mayotte\", value: \"YT\" },\n      { checked: false, label: \"Mexico\", value: \"MX\" },\n      { checked: false, label: \"Micronesia, Federated States of\", value: \"FM\" },\n      { checked: false, label: \"Moldova, Republic of\", value: \"MD\" },\n      { checked: false, label: \"Monaco\", value: \"MC\" },\n      { checked: false, label: \"Mongolia\", value: \"MN\" },\n      { checked: false, label: \"Montserrat\", value: \"MS\" },\n      { checked: false, label: \"Morocco\", value: \"MA\" },\n      { checked: false, label: \"Mozambique\", value: \"MZ\" },\n      { checked: false, label: \"Myanmar\", value: \"MM\" },\n      { checked: false, label: \"Namibia\", value: \"NA\" },\n      { checked: false, label: \"Nauru\", value: \"NR\" },\n      { checked: false, label: \"Nepal\", value: \"NP\" },\n      { checked: false, label: \"Netherlands\", value: \"NL\" },\n      { checked: false, label: \"Netherlands Antilles\", value: \"AN\" },\n      { checked: false, label: \"New Caledonia\", value: \"NC\" },\n      { checked: false, label: \"New Zealand\", value: \"NZ\" },\n      { checked: false, label: \"Nicaragua\", value: \"NI\" },\n      { checked: false, label: \"Niger\", value: \"NE\" },\n      { checked: false, label: \"Nigeria\", value: \"NG\" },\n      { checked: false, label: \"Niue\", value: \"NU\" },\n      { checked: false, label: \"Norfolk Island\", value: \"NF\" },\n      { checked: false, label: \"Northern Mariana Islands\", value: \"MP\" },\n      { checked: false, label: \"Norway\", value: \"NO\" },\n      { checked: false, label: \"Oman\", value: \"OM\" },\n      { checked: false, label: \"Pakistan\", value: \"PK\" },\n      { checked: false, label: \"Palau\", value: \"PW\" },\n      { checked: false, label: \"Palestinian Territory, Occupied\", value: \"PS\" },\n      { checked: false, label: \"Panama\", value: \"PA\" },\n      { checked: false, label: \"Papua New Guinea\", value: \"PG\" },\n      { checked: false, label: \"Paraguay\", value: \"PY\" },\n      { checked: false, label: \"Peru\", value: \"PE\" },\n      { checked: false, label: \"Philippines\", value: \"PH\" },\n      { checked: false, label: \"Pitcairn\", value: \"PN\" },\n      { checked: false, label: \"Poland\", value: \"PL\" },\n      { checked: false, label: \"Portugal\", value: \"PT\" },\n      { checked: false, label: \"Puerto Rico\", value: \"PR\" },\n      { checked: false, label: \"Qatar\", value: \"QA\" },\n      { checked: false, label: \"Reunion\", value: \"RE\" },\n      { checked: false, label: \"Romania\", value: \"RO\" },\n      { checked: false, label: \"Russian Federation\", value: \"RU\" },\n      { checked: false, label: \"RWANDA\", value: \"RW\" },\n      { checked: false, label: \"Saint Helena\", value: \"SH\" },\n      { checked: false, label: \"Saint Kitts and Nevis\", value: \"KN\" },\n      { checked: false, label: \"Saint Lucia\", value: \"LC\" },\n      { checked: false, label: \"Saint Pierre and Miquelon\", value: \"PM\" },\n      {\n        checked: false,\n        label: \"Saint Vincent and the Grenadines\",\n        value: \"VC\",\n      },\n      { checked: false, label: \"Samoa\", value: \"WS\" },\n      { checked: false, label: \"San Marino\", value: \"SM\" },\n      { checked: false, label: \"Sao Tome and Principe\", value: \"ST\" },\n      { checked: false, label: \"Saudi Arabia\", value: \"SA\" },\n      { checked: false, label: \"Senegal\", value: \"SN\" },\n      { checked: false, label: \"Serbia and Montenegro\", value: \"CS\" },\n      { checked: false, label: \"Seychelles\", value: \"SC\" },\n      { checked: false, label: \"Sierra Leone\", value: \"SL\" },\n      { checked: false, label: \"Singapore\", value: \"SG\" },\n      { checked: false, label: \"Slovakia\", value: \"SK\" },\n      { checked: false, label: \"Slovenia\", value: \"SI\" },\n      { checked: false, label: \"Solomon Islands\", value: \"SB\" },\n      { checked: false, label: \"Somalia\", value: \"SO\" },\n      { checked: false, label: \"South Africa\", value: \"ZA\" },\n      {\n        checked: false,\n        label: \"South Georgia and the South Sandwich Islands\",\n        value: \"GS\",\n      },\n      { checked: false, label: \"Spain\", value: \"ES\" },\n      { checked: false, label: \"Sri Lanka\", value: \"LK\" },\n      { checked: false, label: \"Sudan\", value: \"SD\" },\n      { checked: false, label: \"Surichecked: false,label\", value: \"SR\" },\n      { checked: false, label: \"Svalbard and Jan Mayen\", value: \"SJ\" },\n      { checked: false, label: \"Swaziland\", value: \"SZ\" },\n      { checked: false, label: \"Sweden\", value: \"SE\" },\n      { checked: false, label: \"Switzerland\", value: \"CH\" },\n      { checked: false, label: \"Syrian Arab Republic\", value: \"SY\" },\n      { checked: false, label: \"Taiwan, Province of China\", value: \"TW\" },\n      { checked: false, label: \"Tajikistan\", value: \"TJ\" },\n      { checked: false, label: \"Tanzania, United Republic of\", value: \"TZ\" },\n      { checked: false, label: \"Thailand\", value: \"TH\" },\n      { checked: false, label: \"Timor-Leste\", value: \"TL\" },\n      { checked: false, label: \"Togo\", value: \"TG\" },\n      { checked: false, label: \"Tokelau\", value: \"TK\" },\n      { checked: false, label: \"Tonga\", value: \"TO\" },\n      { checked: false, label: \"Trinidad and Tobago\", value: \"TT\" },\n      { checked: false, label: \"Tunisia\", value: \"TN\" },\n      { checked: false, label: \"Turkey\", value: \"TR\" },\n      { checked: false, label: \"Turkmenistan\", value: \"TM\" },\n      { checked: false, label: \"Turks and Caicos Islands\", value: \"TC\" },\n      { checked: false, label: \"Tuvalu\", value: \"TV\" },\n      { checked: false, label: \"Uganda\", value: \"UG\" },\n      { checked: false, label: \"Ukraine\", value: \"UA\" },\n      { checked: false, label: \"United Arab Emirates\", value: \"AE\" },\n      { checked: false, label: \"United Kingdom\", value: \"GB\" },\n      { checked: false, label: \"United States\", value: \"US\" },\n      {\n        checked: false,\n        label: \"United States Minor Outlying Islands\",\n        value: \"UM\",\n      },\n      { checked: false, label: \"Uruguay\", value: \"UY\" },\n      { checked: false, label: \"Uzbekistan\", value: \"UZ\" },\n      { checked: false, label: \"Vanuatu\", value: \"VU\" },\n      { checked: false, label: \"Venezuela\", value: \"VE\" },\n      { checked: false, label: \"Viet Nam\", value: \"VN\" },\n      { checked: false, label: \"Virgin Islands, British\", value: \"VG\" },\n      { checked: false, label: \"Virgin Islands, U.S.\", value: \"VI\" },\n      { checked: false, label: \"Wallis and Futuna\", value: \"WF\" },\n      { checked: false, label: \"Western Sahara\", value: \"EH\" },\n      { checked: false, label: \"Yemen\", value: \"YE\" },\n      { checked: false, label: \"Zambia\", value: \"ZM\" },\n      { checked: false, label: \"Zimbabwe\", value: \"ZW\" },\n    ],\n  },\n];\n\nconst Filters = () => {\n  const {\n    mobileFiltersOpen,\n    setMobileFiltersOpen,\n    values: { nationality },\n    handleChange,\n    handleSubmit,\n  } = useContext(AppContext);\n\n  const handleCheck = (e: KeyboardEvent) => {\n    const value = e.target.value;\n    const isChecked = e.target.checked;\n  };\n\n  return (\n    <Transition.Root show={mobileFiltersOpen} as={Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"fixed inset-0 flex z-40\"\n        onClose={setMobileFiltersOpen}\n      >\n        <Transition.Child\n          as={Fragment}\n          enter=\"transition-opacity ease-linear duration-300\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"transition-opacity ease-linear duration-300\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <Dialog.Overlay className=\"fixed inset-0 bg-black bg-opacity-25\" />\n        </Transition.Child>\n\n        <Transition.Child\n          as={Fragment}\n          enter=\"transition ease-in-out duration-300 transform\"\n          enterFrom=\"translate-x-full\"\n          enterTo=\"translate-x-0\"\n          leave=\"transition ease-in-out duration-300 transform\"\n          leaveFrom=\"translate-x-0\"\n          leaveTo=\"translate-x-full\"\n        >\n          <div className=\"ml-auto relative max-w-xs w-full h-full bg-white dark:bg-gray-700 shadow-xl py-4 pb-12 flex flex-col overflow-y-auto\">\n            <div className=\"px-4 flex items-center justify-between\">\n              <h2 className=\"text-lg font-medium text-gray-900 dark:text-gray-100\">\n                Filters\n              </h2>\n              <button\n                type=\"button\"\n                className=\"-mr-2 w-10 h-10 bg-white dark:bg-gray-800 p-2 rounded-md flex items-center justify-center text-gray-400\"\n                onClick={() => setMobileFiltersOpen(false)}\n              >\n                <span className=\"sr-only\">Close menu</span>\n                <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n              </button>\n            </div>\n\n            {/* Filters */}\n            <form className=\"mt-4 border-t border-gray-200 dark:border-gray-900\">\n              <h3 className=\"sr-only\">Categories</h3>\n\n              {filters.map((section) => (\n                <Disclosure\n                  as=\"div\"\n                  defaultOpen={true}\n                  key={section.id}\n                  className=\"border-t border-gray-200 dark:border-gray-900 px-4 py-6\"\n                >\n                  {({ open }) => (\n                    <>\n                      <h3 className=\"-mx-2 -my-3 flow-root\">\n                        <Disclosure.Button className=\"px-2 py-3 bg-white dark:bg-gray-700 w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                          <span className=\"font-medium text-gray-900 dark:text-gray-100\">\n                            {section.name}\n                          </span>\n                          <span className=\"ml-6 flex items-center\">\n                            {open ? (\n                              <MinusSmIcon className=\"h-5 w-5\" />\n                            ) : (\n                              <PlusSmIcon className=\"h-5 w-5\" />\n                            )}\n                          </span>\n                        </Disclosure.Button>\n                      </h3>\n                      <Disclosure.Panel className=\"pt-6\">\n                        <div className=\"space-y-6\">\n                          {section.options.map((option, optionIdx) => (\n                            <div\n                              key={option.value}\n                              className=\"flex items-center\"\n                            >\n                              <input\n                                id={`filter-mobile-${section.id}-${optionIdx}`}\n                                name={`${section.id}[]`}\n                                onChange={handleCheck}\n                                defaultValue={option.value}\n                                type=\"checkbox\"\n                                defaultChecked={option.checked}\n                                className=\"h-4 w-4 border-gray-300 rounded text-orange-500 focus:ring-orange-400\"\n                              />\n                              <label\n                                htmlFor={`filter-mobile-${section.id}-${optionIdx}`}\n                                className=\"ml-3 min-w-0 flex-1 text-gray-500 dark:text-gray-200\"\n                              >\n                                {option.label}\n                              </label>\n                            </div>\n                          ))}\n                        </div>\n                      </Disclosure.Panel>\n                    </>\n                  )}\n                </Disclosure>\n              ))}\n            </form>\n          </div>\n        </Transition.Child>\n      </Dialog>\n    </Transition.Root>\n  );\n};\n\nexport default Filters;\n"]},"metadata":{},"sourceType":"module"}