{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\n\nconst useGetUsers = function () {\n  _s();\n\n  let {\n    results = 50,\n    nationalities = []\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setUsers = useSetRecoilState(usersState);\n  const {\n    isLoading,\n    error,\n    data,\n    isFetching\n  } = useQuery(\"randomUsersData\", () => axios.get(`https://randomuser.me/api/?results=${results}`).then(res => res.data));\n  if (isLoading) return \"Loading...\";\n  if (error) return \"An error has occurred: \" + (error === null || error === void 0 ? void 0 : error.message);\n  setUsers({ ...data,\n    loading: false,\n    error: null\n  });\n};\n\n_s(useGetUsers, \"Wk9cSotbhwnOZ9XFsBa6tSkxa7w=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetUsers;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/hooks/useGetUsers.ts"],"names":["axios","useQuery","useSetRecoilState","usersState","useGetUsers","results","nationalities","setUsers","isLoading","error","data","isFetching","get","then","res","message","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAOA,MAAMC,WAAW,GAAG,YAGa;AAAA;;AAAA,MAHZ;AACnBC,IAAAA,OAAO,GAAG,EADS;AAEnBC,IAAAA,aAAa,GAAG;AAFG,GAGY,uEAAP,EAAO;AAC/B,QAAMC,QAAQ,GAAGL,iBAAiB,CAACC,UAAD,CAAlC;AACA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,MAAyCV,QAAQ,CACrD,iBADqD,EAErD,MACED,KAAK,CACFY,GADH,CACQ,sCAAqCP,OAAQ,EADrD,EAEGQ,IAFH,CAESC,GAAD,IAASA,GAAG,CAACJ,IAFrB,CAHmD,CAAvD;AAQA,MAAIF,SAAJ,EAAe,OAAO,YAAP;AAEf,MAAIC,KAAJ,EAAW,OAAO,6BAA4BA,KAA5B,aAA4BA,KAA5B,uBAA4BA,KAAK,CAAEM,OAAnC,CAAP;AAEXR,EAAAA,QAAQ,CAAC,EAAE,GAAGG,IAAL;AAAWM,IAAAA,OAAO,EAAE,KAApB;AAA2BP,IAAAA,KAAK,EAAE;AAAlC,GAAD,CAAR;AACD,CAlBD;;GAAML,W;UAIaF,iB,EAC8BD,Q;;;AAejD,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\n\ninterface UseGetUsersInterface {\n  results?: 50;\n  nationalities?: string[];\n}\n\nconst useGetUsers = ({\n  results = 50,\n  nationalities = [],\n}: UseGetUsersInterface = {}) => {\n  const setUsers = useSetRecoilState(usersState);\n  const { isLoading, error, data, isFetching } = useQuery(\n    \"randomUsersData\",\n    () =>\n      axios\n        .get(`https://randomuser.me/api/?results=${results}`)\n        .then((res) => res.data)\n  );\n\n  if (isLoading) return \"Loading...\";\n\n  if (error) return \"An error has occurred: \" + error?.message;\n\n  setUsers({ ...data, loading: false, error: null });\n};\n\nexport default useGetUsers;\n"]},"metadata":{},"sourceType":"module"}