{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\n\nconst useGetUsers = function () {\n  _s();\n\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setUsers = useSetRecoilState(usersState);\n  const {\n    isLoading,\n    error,\n    data,\n    isFetching\n  } = useQuery(\"randomUsersData\", () => api(params));\n\n  if (isLoading) {\n    setUsers(users => {\n      return { ...users,\n        loading: true,\n        error: error\n      };\n    });\n  } else {\n    if (error) setUsers({ ...data,\n      loading: false,\n      error: error\n    });else setUsers({ ...data,\n      loading: false,\n      error: null\n    });\n  }\n};\n\n_s(useGetUsers, \"Wk9cSotbhwnOZ9XFsBa6tSkxa7w=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetUsers;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/hooks/useGetUsers.ts"],"names":["useQuery","useSetRecoilState","usersState","useGetUsers","params","setUsers","isLoading","error","data","isFetching","api","users","loading"],"mappings":";;AACA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAQA,MAAMC,WAAW,GAAG,YAAuC;AAAA;;AAAA,MAAtCC,MAAsC,uEAAP,EAAO;AACzD,QAAMC,QAAQ,GAAGJ,iBAAiB,CAACC,UAAD,CAAlC;AACA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,MAAyCT,QAAQ,CACrD,iBADqD,EAErD,MAAMU,GAAG,CAACN,MAAD,CAF4C,CAAvD;;AAKA,MAAIE,SAAJ,EAAe;AACbD,IAAAA,QAAQ,CAAEM,KAAD,IAAW;AAClB,aAAO,EAAE,GAAGA,KAAL;AAAYC,QAAAA,OAAO,EAAE,IAArB;AAA2BL,QAAAA,KAAK,EAAEA;AAAlC,OAAP;AACD,KAFO,CAAR;AAGD,GAJD,MAIO;AACL,QAAIA,KAAJ,EAAWF,QAAQ,CAAC,EAAE,GAAGG,IAAL;AAAWI,MAAAA,OAAO,EAAE,KAApB;AAA2BL,MAAAA,KAAK,EAAEA;AAAlC,KAAD,CAAR,CAAX,KACKF,QAAQ,CAAC,EAAE,GAAGG,IAAL;AAAWI,MAAAA,OAAO,EAAE,KAApB;AAA2BL,MAAAA,KAAK,EAAE;AAAlC,KAAD,CAAR;AACN;AACF,CAfD;;GAAMJ,W;UACaF,iB,EAC8BD,Q;;;AAejD,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\n\ninterface UseGetUsersInterface {\n  results?: number;\n  nationalities?: string[];\n  search?: string;\n}\n\nconst useGetUsers = (params: UseGetUsersInterface = {}) => {\n  const setUsers = useSetRecoilState(usersState);\n  const { isLoading, error, data, isFetching } = useQuery(\n    \"randomUsersData\",\n    () => api(params)\n  );\n\n  if (isLoading) {\n    setUsers((users) => {\n      return { ...users, loading: true, error: error };\n    });\n  } else {\n    if (error) setUsers({ ...data, loading: false, error: error });\n    else setUsers({ ...data, loading: false, error: null });\n  }\n};\n\nexport default useGetUsers;\n"]},"metadata":{},"sourceType":"module"}