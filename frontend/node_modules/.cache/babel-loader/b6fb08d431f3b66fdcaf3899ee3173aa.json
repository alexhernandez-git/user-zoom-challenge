{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nconst useGetUsers = function () {\n  _s();\n\n  let {\n    results = 50,\n    nationalities = []\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  //   const setUsers = useSetRecoilState(usersState);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"randomUsersData\", results, nationalities], () => axios.get(`https://randomuser.me/api/?inc=name,nat,picture,email,phone&results=${results}&nat=${nationalities.join(\",\").toLowerCase()}`).then(res => res.data).catch(err => err.response));\n\n  if (isLoading) {\n    setUsers(users => {\n      return { ...users,\n        loading: true,\n        error: error\n      };\n    });\n  } else {\n    if (error) setUsers({ ...data,\n      loading: false,\n      error: error\n    });else setUsers({ ...data,\n      loading: false,\n      error: null\n    });\n  }\n};\n\n_s(useGetUsers, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n\nexport default useGetUsers;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/hooks/useGetUsers.ts"],"names":["axios","useQuery","useGetUsers","results","nationalities","isLoading","error","data","get","join","toLowerCase","then","res","catch","err","response","setUsers","users","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AASA,MAAMC,WAAW,GAAG,YAGa;AAAA;;AAAA,MAHZ;AACnBC,IAAAA,OAAO,GAAG,EADS;AAEnBC,IAAAA,aAAa,GAAG;AAFG,GAGY,uEAAP,EAAO;AAC/B;AAEA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BN,QAAQ,CACzC,CAAC,iBAAD,EAAoBE,OAApB,EAA6BC,aAA7B,CADyC,EAEzC,MACEJ,KAAK,CACFQ,GADH,CAEK,uEAAsEL,OAAQ,QAAOC,aAAa,CAChGK,IADmF,CAC9E,GAD8E,EAEnFC,WAFmF,EAErE,EAJrB,EAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACL,IANrB,EAOGM,KAPH,CAOUC,GAAD,IAASA,GAAG,CAACC,QAPtB,CAHuC,CAA3C;;AAaA,MAAIV,SAAJ,EAAe;AACbW,IAAAA,QAAQ,CAAEC,KAAD,IAAW;AAClB,aAAO,EAAE,GAAGA,KAAL;AAAYC,QAAAA,OAAO,EAAE,IAArB;AAA2BZ,QAAAA,KAAK,EAAEA;AAAlC,OAAP;AACD,KAFO,CAAR;AAGD,GAJD,MAIO;AACL,QAAIA,KAAJ,EAAWU,QAAQ,CAAC,EAAE,GAAGT,IAAL;AAAWW,MAAAA,OAAO,EAAE,KAApB;AAA2BZ,MAAAA,KAAK,EAAEA;AAAlC,KAAD,CAAR,CAAX,KACKU,QAAQ,CAAC,EAAE,GAAGT,IAAL;AAAWW,MAAAA,OAAO,EAAE,KAApB;AAA2BZ,MAAAA,KAAK,EAAE;AAAlC,KAAD,CAAR;AACN;AACF,CA3BD;;GAAMJ,W;UAM+BD,Q;;;AAuBrC,eAAeC,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\n\ninterface UseGetUsersInterface {\n  results?: number;\n  nationalities?: string[];\n}\n\nconst useGetUsers = ({\n  results = 50,\n  nationalities = [],\n}: UseGetUsersInterface = {}) => {\n  //   const setUsers = useSetRecoilState(usersState);\n\n  const { isLoading, error, data } = useQuery(\n    [\"randomUsersData\", results, nationalities],\n    () =>\n      axios\n        .get(\n          `https://randomuser.me/api/?inc=name,nat,picture,email,phone&results=${results}&nat=${nationalities\n            .join(\",\")\n            .toLowerCase()}`\n        )\n        .then((res) => res.data)\n        .catch((err) => err.response)\n  );\n\n  if (isLoading) {\n    setUsers((users) => {\n      return { ...users, loading: true, error: error };\n    });\n  } else {\n    if (error) setUsers({ ...data, loading: false, error: error });\n    else setUsers({ ...data, loading: false, error: null });\n  }\n};\n\nexport default useGetUsers;\n"]},"metadata":{},"sourceType":"module"}