{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"./state/usersState\";\n\nconst getUsers = function () {\n  _s();\n\n  let {\n    results = 50,\n    nationalities = [],\n    search = \"\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setUsers = useSetRecoilState(usersState);\n  const {\n    isLoading,\n    error,\n    data,\n    isFetching\n  } = useQuery(\"randomUsersData\", () => axios.get(`https://randomuser.me/api/?results=${results}`).then(res => res.data));\n\n  if (isLoading) {\n    setUsers(users => {\n      return { ...users,\n        loading: true,\n        error: error\n      };\n    });\n  } else {\n    if (error) setUsers({ ...data,\n      loading: false,\n      error: error\n    });else setUsers({ ...data,\n      loading: false,\n      error: null\n    });\n  }\n};\n\n_s(getUsers, \"Wk9cSotbhwnOZ9XFsBa6tSkxa7w=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default getUsers;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/helpers.ts"],"names":["axios","useQuery","useSetRecoilState","usersState","getUsers","results","nationalities","search","setUsers","isLoading","error","data","isFetching","get","then","res","users","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAQA,MAAMC,QAAQ,GAAG,YAIgB;AAAA;;AAAA,MAJf;AAChBC,IAAAA,OAAO,GAAG,EADM;AAEhBC,IAAAA,aAAa,GAAG,EAFA;AAGhBC,IAAAA,MAAM,GAAG;AAHO,GAIe,uEAAP,EAAO;AAC/B,QAAMC,QAAQ,GAAGN,iBAAiB,CAACC,UAAD,CAAlC;AACA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,MAAyCX,QAAQ,CACrD,iBADqD,EAErD,MACED,KAAK,CACFa,GADH,CACQ,sCAAqCR,OAAQ,EADrD,EAEGS,IAFH,CAESC,GAAD,IAASA,GAAG,CAACJ,IAFrB,CAHmD,CAAvD;;AAQA,MAAIF,SAAJ,EAAe;AACbD,IAAAA,QAAQ,CAAEQ,KAAD,IAAW;AAClB,aAAO,EAAE,GAAGA,KAAL;AAAYC,QAAAA,OAAO,EAAE,IAArB;AAA2BP,QAAAA,KAAK,EAAEA;AAAlC,OAAP;AACD,KAFO,CAAR;AAGD,GAJD,MAIO;AACL,QAAIA,KAAJ,EAAWF,QAAQ,CAAC,EAAE,GAAGG,IAAL;AAAWM,MAAAA,OAAO,EAAE,KAApB;AAA2BP,MAAAA,KAAK,EAAEA;AAAlC,KAAD,CAAR,CAAX,KACKF,QAAQ,CAAC,EAAE,GAAGG,IAAL;AAAWM,MAAAA,OAAO,EAAE,KAApB;AAA2BP,MAAAA,KAAK,EAAE;AAAlC,KAAD,CAAR;AACN;AACF,CAtBD;;GAAMN,Q;UAKaF,iB,EAC8BD,Q;;;AAkBjD,eAAeG,QAAf","sourcesContent":["import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"./state/usersState\";\n\ninterface UseGetUsersInterface {\n  results?: number;\n  nationalities?: string[];\n  search?: string;\n}\n\nconst getUsers = ({\n  results = 50,\n  nationalities = [],\n  search = \"\",\n}: UseGetUsersInterface = {}) => {\n  const setUsers = useSetRecoilState(usersState);\n  const { isLoading, error, data, isFetching } = useQuery(\n    \"randomUsersData\",\n    () =>\n      axios\n        .get(`https://randomuser.me/api/?results=${results}`)\n        .then((res) => res.data)\n  );\n\n  if (isLoading) {\n    setUsers((users) => {\n      return { ...users, loading: true, error: error };\n    });\n  } else {\n    if (error) setUsers({ ...data, loading: false, error: error });\n    else setUsers({ ...data, loading: false, error: null });\n  }\n};\n\nexport default getUsers;\n"]},"metadata":{},"sourceType":"module"}