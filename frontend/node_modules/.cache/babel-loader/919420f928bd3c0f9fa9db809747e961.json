{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useDarkTheme = () => {\n  _s();\n\n  const [isDarkLoading, setIsDarkLoading] = useState(true);\n  const [isDark, setIsDark] = useState(false);\n  useEffect(() => {\n    (async () => {\n      if ((await localStorage.getItem(\"theme\")) === \"dark\") {\n        setIsDark(true);\n      }\n\n      setIsDarkLoading(false);\n    })();\n  }, []);\n\n  const handleToggleIsDark = () => {\n    if (isDark) {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.removeItem(\"theme\");\n      setIsDark(false);\n    } else {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n      setIsDark(true);\n    }\n  };\n\n  return {\n    isDark,\n    isDarkLoading,\n    handleToggleIsDark\n  };\n};\n\n_s(useDarkTheme, \"6cIP/5Y3a/tiDe1lOvZB6SrVdKA=\");\n\nexport default useDarkTheme;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/hooks/useDarkTheme.ts"],"names":["useEffect","useState","useDarkTheme","isDarkLoading","setIsDarkLoading","isDark","setIsDark","localStorage","getItem","handleToggleIsDark","document","documentElement","classList","remove","removeItem","add","setItem"],"mappings":";;AAAA,SAAgBA,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCH,QAAQ,CAAU,IAAV,CAAlD;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAU,KAAV,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,UAAI,CAAC,MAAMO,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP,MAA0C,MAA9C,EAAsD;AACpDF,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACDF,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;;AAQA,QAAMK,kBAAkB,GAAG,MAAM;AAC/B,QAAIJ,MAAJ,EAAY;AACVK,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,MAA1C;AACAN,MAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB;AACAR,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAJD,MAIO;AACLI,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCG,GAAnC,CAAuC,MAAvC;AACAR,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAV,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAVD;;AAWA,SAAO;AAAED,IAAAA,MAAF;AAAUF,IAAAA,aAAV;AAAyBM,IAAAA;AAAzB,GAAP;AACD,CAxBD;;GAAMP,Y;;AA0BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst useDarkTheme = () => {\n  const [isDarkLoading, setIsDarkLoading] = useState<boolean>(true);\n  const [isDark, setIsDark] = useState<boolean>(false);\n\n  useEffect(() => {\n    (async () => {\n      if ((await localStorage.getItem(\"theme\")) === \"dark\") {\n        setIsDark(true);\n      }\n      setIsDarkLoading(false);\n    })();\n  }, []);\n  const handleToggleIsDark = () => {\n    if (isDark) {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.removeItem(\"theme\");\n      setIsDark(false);\n    } else {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.setItem(\"theme\", \"dark\");\n      setIsDark(true);\n    }\n  };\n  return { isDark, isDarkLoading, handleToggleIsDark };\n};\n\nexport default useDarkTheme;\n"]},"metadata":{},"sourceType":"module"}