{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\n\nconst useGetUsers = function () {\n  _s();\n\n  let {\n    results = 50,\n    nationalities = [],\n    search = \"\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setUsers = useSetRecoilState(usersState);\n  console.warn(\"search\", search);\n  const {\n    isLoading,\n    error,\n    data,\n    isFetching\n  } = useQuery([\"randomUsersData\", results, nationalities, search], () => axios.get(`https://randomuser.me/api/?results=${results}`).then(res => res.data || []).catch(err => err.response));\n\n  if (isLoading) {\n    setUsers(users => {\n      return { ...users,\n        loading: true,\n        error: error\n      };\n    });\n  } else {\n    if (error) setUsers({ ...data,\n      loading: false,\n      error: error\n    });else setUsers({ ...data,\n      loading: false,\n      error: null\n    });\n  }\n};\n\n_s(useGetUsers, \"Wk9cSotbhwnOZ9XFsBa6tSkxa7w=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetUsers;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/hooks/useGetUsers.ts"],"names":["axios","useQuery","useSetRecoilState","usersState","useGetUsers","results","nationalities","search","setUsers","console","warn","isLoading","error","data","isFetching","get","then","res","catch","err","response","users","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AASA,MAAMC,WAAW,GAAG,YAIa;AAAA;;AAAA,MAJZ;AACnBC,IAAAA,OAAO,GAAG,EADS;AAEnBC,IAAAA,aAAa,GAAG,EAFG;AAGnBC,IAAAA,MAAM,GAAG;AAHU,GAIY,uEAAP,EAAO;AAC/B,QAAMC,QAAQ,GAAGN,iBAAiB,CAACC,UAAD,CAAlC;AACAM,EAAAA,OAAO,CAACC,IAAR,CAAa,QAAb,EAAuBH,MAAvB;AACA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA;AAA1B,MAAyCb,QAAQ,CACrD,CAAC,iBAAD,EAAoBI,OAApB,EAA6BC,aAA7B,EAA4CC,MAA5C,CADqD,EAErD,MACEP,KAAK,CACFe,GADH,CACQ,sCAAqCV,OAAQ,EADrD,EAEGW,IAFH,CAESC,GAAD,IAASA,GAAG,CAACJ,IAAJ,IAAY,EAF7B,EAGGK,KAHH,CAGUC,GAAD,IAASA,GAAG,CAACC,QAHtB,CAHmD,CAAvD;;AASA,MAAIT,SAAJ,EAAe;AACbH,IAAAA,QAAQ,CAAEa,KAAD,IAAW;AAClB,aAAO,EAAE,GAAGA,KAAL;AAAYC,QAAAA,OAAO,EAAE,IAArB;AAA2BV,QAAAA,KAAK,EAAEA;AAAlC,OAAP;AACD,KAFO,CAAR;AAGD,GAJD,MAIO;AACL,QAAIA,KAAJ,EAAWJ,QAAQ,CAAC,EAAE,GAAGK,IAAL;AAAWS,MAAAA,OAAO,EAAE,KAApB;AAA2BV,MAAAA,KAAK,EAAEA;AAAlC,KAAD,CAAR,CAAX,KACKJ,QAAQ,CAAC,EAAE,GAAGK,IAAL;AAAWS,MAAAA,OAAO,EAAE,KAApB;AAA2BV,MAAAA,KAAK,EAAE;AAAlC,KAAD,CAAR;AACN;AACF,CAxBD;;GAAMR,W;UAKaF,iB,EAE8BD,Q;;;AAmBjD,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\nimport { UserType } from \"../types\";\n\ninterface UseGetUsersInterface {\n  results?: number;\n  nationalities?: string[];\n  search?: string;\n}\n\nconst useGetUsers = ({\n  results = 50,\n  nationalities = [],\n  search = \"\",\n}: UseGetUsersInterface = {}) => {\n  const setUsers = useSetRecoilState(usersState);\n  console.warn(\"search\", search);\n  const { isLoading, error, data, isFetching } = useQuery(\n    [\"randomUsersData\", results, nationalities, search],\n    () =>\n      axios\n        .get(`https://randomuser.me/api/?results=${results}`)\n        .then((res) => res.data || [])\n        .catch((err) => err.response)\n  );\n\n  if (isLoading) {\n    setUsers((users) => {\n      return { ...users, loading: true, error: error };\n    });\n  } else {\n    if (error) setUsers({ ...data, loading: false, error: error });\n    else setUsers({ ...data, loading: false, error: null });\n  }\n};\n\nexport default useGetUsers;\n"]},"metadata":{},"sourceType":"module"}