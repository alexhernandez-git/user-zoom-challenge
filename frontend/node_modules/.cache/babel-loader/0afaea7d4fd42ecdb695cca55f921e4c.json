{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\n\nconst useGetRepos = function () {\n  _s();\n\n  let {\n    results = 50,\n    nationalities = [],\n    page = 1,\n    org = \"facebook\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setUsers = useSetRecoilState(usersState);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"randomUsersData\"], () => axios.get(`https://api.github.com/orgs/${org}/repos`, {\n    headers: {\n      Authorization: \"token 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\"\n    }\n  }).then(res => console.log(res.data)).catch(err => console.log(err.response)));\n  console.log(data); // useEffect(() => {\n  //   if (isLoading) {\n  //     setUsers((users: UsersInterface) => {\n  //       return { ...users, loading: true, error: error };\n  //     });\n  //   } else {\n  //     if (error) setUsers({ ...data, loading: false, error: error });\n  //     else {\n  //       if (page === 1) {\n  //         setUsers({ ...data, loading: false, error: null });\n  //       } else {\n  //         setUsers((users: UsersInterface) => ({\n  //           ...users,\n  //           ...data,\n  //           results: [...users.results, ...data.results],\n  //           loading: false,\n  //           error: null,\n  //         }));\n  //       }\n  //     }\n  //   }\n  // }, [isLoading]);\n};\n\n_s(useGetRepos, \"E+Ioi+GQxOJn3Rog+AYo1MlBgkM=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetRepos;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/user-zoom-challenge/frontend/src/hooks/useGetRepos.ts"],"names":["axios","useQuery","useSetRecoilState","usersState","useGetRepos","results","nationalities","page","org","setUsers","isLoading","error","data","get","headers","Authorization","then","res","console","log","catch","err","response"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAUA,MAAMC,WAAW,GAAG,YAKa;AAAA;;AAAA,MALZ;AACnBC,IAAAA,OAAO,GAAG,EADS;AAEnBC,IAAAA,aAAa,GAAG,EAFG;AAGnBC,IAAAA,IAAI,GAAG,CAHY;AAInBC,IAAAA,GAAG,GAAG;AAJa,GAKY,uEAAP,EAAO;AAC/B,QAAMC,QAAQ,GAAGP,iBAAiB,CAACC,UAAD,CAAlC;AAEA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BX,QAAQ,CAAC,CAAC,iBAAD,CAAD,EAAsB,MAC/DD,KAAK,CACFa,GADH,CACQ,+BAA8BL,GAAI,QAD1C,EACmD;AAC/CM,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR;AADsC,GADnD,EAMGC,IANH,CAMSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACL,IAAhB,CANjB,EAOGQ,KAPH,CAOUC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,QAAhB,CAPlB,CADyC,CAA3C;AAUAJ,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAb+B,CAc/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAzCD;;GAAMR,W;UAMaF,iB,EAEkBD,Q;;;AAmCrC,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\nimport { UsersInterface } from \"../types\";\n\ninterface UseGetUsersInterface {\n  results?: number;\n  nationalities?: string[];\n  page?: number;\n  org?: string;\n}\n\nconst useGetRepos = ({\n  results = 50,\n  nationalities = [],\n  page = 1,\n  org = \"facebook\",\n}: UseGetUsersInterface = {}) => {\n  const setUsers = useSetRecoilState(usersState);\n\n  const { isLoading, error, data } = useQuery([\"randomUsersData\"], () =>\n    axios\n      .get(`https://api.github.com/orgs/${org}/repos`, {\n        headers: {\n          Authorization: \"token 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\",\n        },\n      })\n      .then((res) => console.log(res.data))\n      .catch((err) => console.log(err.response))\n  );\n  console.log(data);\n  // useEffect(() => {\n  //   if (isLoading) {\n  //     setUsers((users: UsersInterface) => {\n  //       return { ...users, loading: true, error: error };\n  //     });\n  //   } else {\n  //     if (error) setUsers({ ...data, loading: false, error: error });\n  //     else {\n  //       if (page === 1) {\n  //         setUsers({ ...data, loading: false, error: null });\n  //       } else {\n  //         setUsers((users: UsersInterface) => ({\n  //           ...users,\n  //           ...data,\n  //           results: [...users.results, ...data.results],\n  //           loading: false,\n  //           error: null,\n  //         }));\n  //       }\n  //     }\n  //   }\n  // }, [isLoading]);\n};\n\nexport default useGetRepos;\n"]},"metadata":{},"sourceType":"module"}