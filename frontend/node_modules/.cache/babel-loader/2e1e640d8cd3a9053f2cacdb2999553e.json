{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport reposState from \"../state/reposState\";\n\nconst useGetRepos = function () {\n  _s();\n\n  let {\n    results = 50,\n    nationalities = [],\n    page = 1,\n    org = \"facebook\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setRepos = useSetRecoilState(reposState);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"randomUsersData\"], () => axios.get(`https://api.github.com/orgs/${org}/repos`, {\n    headers: {\n      Authorization: \"token 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\"\n    }\n  }).then(res => res.data).catch(err => err.response));\n  console.log(data);\n  useEffect(() => {\n    if (data) {\n      if (isLoading) {\n        setRepos(repos => {\n          return { ...repos,\n            loading: true,\n            error: error\n          };\n        });\n      } else {\n        if (error) setRepos({\n          results: data,\n          loading: false,\n          error: error\n        });else {\n          if (page === 1) {\n            setRepos({\n              results: data,\n              loading: false,\n              error: null\n            });\n          } else {\n            setRepos(repos => ({ ...repos,\n              results: [...repos.results, ...data],\n              loading: false,\n              error: null\n            }));\n          }\n        }\n      }\n    }\n  }, [isLoading, data]);\n};\n\n_s(useGetRepos, \"25rynwHFMVJuecTAioHeBBPOyRM=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetRepos;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/user-zoom-challenge/frontend/src/hooks/useGetRepos.ts"],"names":["axios","useEffect","useQuery","useSetRecoilState","reposState","useGetRepos","results","nationalities","page","org","setRepos","isLoading","error","data","get","headers","Authorization","then","res","catch","err","response","console","log","repos","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAUA,MAAMC,WAAW,GAAG,YAKa;AAAA;;AAAA,MALZ;AACnBC,IAAAA,OAAO,GAAG,EADS;AAEnBC,IAAAA,aAAa,GAAG,EAFG;AAGnBC,IAAAA,IAAI,GAAG,CAHY;AAInBC,IAAAA,GAAG,GAAG;AAJa,GAKY,uEAAP,EAAO;AAC/B,QAAMC,QAAQ,GAAGP,iBAAiB,CAACC,UAAD,CAAlC;AAEA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BX,QAAQ,CAAC,CAAC,iBAAD,CAAD,EAAsB,MAC/DF,KAAK,CACFc,GADH,CACQ,+BAA8BL,GAAI,QAD1C,EACmD;AAC/CM,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR;AADsC,GADnD,EAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACL,IANrB,EAOGM,KAPH,CAOUC,GAAD,IAASA,GAAG,CAACC,QAPtB,CADyC,CAA3C;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,IAAJ,EAAU;AACR,UAAIF,SAAJ,EAAe;AACbD,QAAAA,QAAQ,CAAEc,KAAD,IAA2B;AAClC,iBAAO,EAAE,GAAGA,KAAL;AAAYC,YAAAA,OAAO,EAAE,IAArB;AAA2Bb,YAAAA,KAAK,EAAEA;AAAlC,WAAP;AACD,SAFO,CAAR;AAGD,OAJD,MAIO;AACL,YAAIA,KAAJ,EAAWF,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAEO,IAAX;AAAiBY,UAAAA,OAAO,EAAE,KAA1B;AAAiCb,UAAAA,KAAK,EAAEA;AAAxC,SAAD,CAAR,CAAX,KACK;AACH,cAAIJ,IAAI,KAAK,CAAb,EAAgB;AACdE,YAAAA,QAAQ,CAAC;AAAEJ,cAAAA,OAAO,EAAEO,IAAX;AAAiBY,cAAAA,OAAO,EAAE,KAA1B;AAAiCb,cAAAA,KAAK,EAAE;AAAxC,aAAD,CAAR;AACD,WAFD,MAEO;AACLF,YAAAA,QAAQ,CAAEc,KAAD,KAA4B,EACnC,GAAGA,KADgC;AAEnClB,cAAAA,OAAO,EAAE,CAAC,GAAGkB,KAAK,CAAClB,OAAV,EAAmB,GAAGO,IAAtB,CAF0B;AAGnCY,cAAAA,OAAO,EAAE,KAH0B;AAInCb,cAAAA,KAAK,EAAE;AAJ4B,aAA5B,CAAD,CAAR;AAMD;AACF;AACF;AACF;AACF,GAtBQ,EAsBN,CAACD,SAAD,EAAYE,IAAZ,CAtBM,CAAT;AAuBD,CA1CD;;GAAMR,W;UAMaF,iB,EAEkBD,Q;;;AAoCrC,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport reposState from \"../state/reposState\";\nimport { ReposInterface } from \"../types\";\n\ninterface UseGetReposInterface {\n  results?: number;\n  nationalities?: string[];\n  page?: number;\n  org?: string;\n}\n\nconst useGetRepos = ({\n  results = 50,\n  nationalities = [],\n  page = 1,\n  org = \"facebook\",\n}: UseGetReposInterface = {}) => {\n  const setRepos = useSetRecoilState(reposState);\n\n  const { isLoading, error, data } = useQuery([\"randomUsersData\"], () =>\n    axios\n      .get(`https://api.github.com/orgs/${org}/repos`, {\n        headers: {\n          Authorization: \"token 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\",\n        },\n      })\n      .then((res) => res.data)\n      .catch((err) => err.response)\n  );\n  console.log(data);\n  useEffect(() => {\n    if (data) {\n      if (isLoading) {\n        setRepos((repos: ReposInterface) => {\n          return { ...repos, loading: true, error: error };\n        });\n      } else {\n        if (error) setRepos({ results: data, loading: false, error: error });\n        else {\n          if (page === 1) {\n            setRepos({ results: data, loading: false, error: null });\n          } else {\n            setRepos((repos: ReposInterface) => ({\n              ...repos,\n              results: [...repos.results, ...data],\n              loading: false,\n              error: null,\n            }));\n          }\n        }\n      }\n    }\n  }, [isLoading, data]);\n};\n\nexport default useGetRepos;\n"]},"metadata":{},"sourceType":"module"}