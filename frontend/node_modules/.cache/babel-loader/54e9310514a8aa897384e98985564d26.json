{"ast":null,"code":"var _jsxFileName = \"/Users/alexhernandezprat/code/user-zoom-challenge/frontend/src/components/Search/index.tsx\",\n    _s = $RefreshSig$();\n\n/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n    ],\n  }\n  ```\n*/\nimport { useEffect, useState } from \"react\";\nimport { Combobox } from \"@headlessui/react\";\nimport useGetOrgs from \"../../hooks/useGetOrgs\";\nimport orgsState from \"../../state/orgsState\";\nimport { useRecoilValue } from \"recoil\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst people = [{\n  name: \"Leslie Alexander\",\n  username: \"@lesliealexander\"\n} // More users...\n];\n\nfunction classNames() {\n  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n    classes[_key] = arguments[_key];\n  }\n\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport default function SearchComponent() {\n  _s();\n\n  const [user, setUser] = useState(\"\");\n  useGetOrgs({\n    user\n  });\n  const [query, setQuery] = useState(\"\");\n  const [selectedPerson, setSelectedPerson] = useState();\n  useEffect(() => {\n    let timeoutId = setTimeout(() => {\n      setUser(query);\n    }, 500);\n\n    () => {\n      clearTimeout(timeoutId);\n    };\n  }, [query]);\n  const orgs = useRecoilValue(orgsState);\n  return /*#__PURE__*/_jsxDEV(Combobox, {\n    as: \"div\",\n    value: selectedPerson,\n    onChange: setSelectedPerson\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchComponent, \"vpqdOUI/r1332v5ThFvI5VpcRnk=\", false, function () {\n  return [useGetOrgs, useRecoilValue];\n});\n\n_c = SearchComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"sources":["/Users/alexhernandezprat/code/user-zoom-challenge/frontend/src/components/Search/index.tsx"],"names":["useEffect","useState","Combobox","useGetOrgs","orgsState","useRecoilValue","people","name","username","classNames","classes","filter","Boolean","join","SearchComponent","user","setUser","query","setQuery","selectedPerson","setSelectedPerson","timeoutId","setTimeout","clearTimeout","orgs"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,cAAT,QAA+B,QAA/B;;AAQA,MAAMC,MAAM,GAAG,CACb;AAAEC,EAAAA,IAAI,EAAE,kBAAR;AAA4BC,EAAAA,QAAQ,EAAE;AAAtC,CADa,CAEb;AAFa,CAAf;;AAKA,SAASC,UAAT,GAA0C;AAAA,oCAAnBC,OAAmB;AAAnBA,IAAAA,OAAmB;AAAA;;AACxC,SAAOA,OAAO,CAACC,MAAR,CAAeC,OAAf,EAAwBC,IAAxB,CAA6B,GAA7B,CAAP;AACD;;AAED,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AACAE,EAAAA,UAAU,CAAC;AAAEY,IAAAA;AAAF,GAAD,CAAV;AAEA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,EAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,SAAS,GAAGC,UAAU,CAAC,MAAM;AAC/BN,MAAAA,OAAO,CAACC,KAAD,CAAP;AACD,KAFyB,EAEvB,GAFuB,CAA1B;;AAGA,UAAM;AACJM,MAAAA,YAAY,CAACF,SAAD,CAAZ;AACD,KAFD;AAGD,GAPQ,EAON,CAACJ,KAAD,CAPM,CAAT;AASA,QAAMO,IAAI,GAAGnB,cAAc,CAAQD,SAAR,CAA3B;AAEA,sBACE,QAAC,QAAD;AACE,IAAA,EAAE,EAAC,KADL;AAEE,IAAA,KAAK,EAAEe,cAFT;AAGE,IAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAzBuBN,e;UAEtBX,U,EAcaE,c;;;KAhBSS,e","sourcesContent":["/*\n  This example requires Tailwind CSS v2.0+ \n  \n  This example requires some changes to your config:\n  \n  ```\n  // tailwind.config.js\n  module.exports = {\n    // ...\n    plugins: [\n      // ...\n      require('@tailwindcss/forms'),\n    ],\n  }\n  ```\n*/\nimport { useEffect, useState } from \"react\";\nimport { CheckIcon, SelectorIcon } from \"@heroicons/react/solid\";\nimport { Combobox } from \"@headlessui/react\";\nimport useGetOrgs from \"../../hooks/useGetOrgs\";\nimport orgsState from \"../../state/orgsState\";\nimport { useRecoilValue } from \"recoil\";\nimport { IOrgs, TOrg } from \"../../types\";\n\ntype TPerson = {\n  name: string;\n  username: string;\n};\n\nconst people = [\n  { name: \"Leslie Alexander\", username: \"@lesliealexander\" },\n  // More users...\n];\n\nfunction classNames(...classes: string[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport default function SearchComponent() {\n  const [user, setUser] = useState(\"\");\n  useGetOrgs({ user });\n\n  const [query, setQuery] = useState(\"\");\n  const [selectedPerson, setSelectedPerson] = useState();\n\n  useEffect(() => {\n    let timeoutId = setTimeout(() => {\n      setUser(query);\n    }, 500);\n    () => {\n      clearTimeout(timeoutId);\n    };\n  }, [query]);\n\n  const orgs = useRecoilValue<IOrgs>(orgsState);\n\n  return (\n    <Combobox\n      as=\"div\"\n      value={selectedPerson}\n      onChange={setSelectedPerson}\n    ></Combobox>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}