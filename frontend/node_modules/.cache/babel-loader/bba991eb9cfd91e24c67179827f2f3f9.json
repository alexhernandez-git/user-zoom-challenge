{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\n\nconst useGetUsers = function () {\n  _s();\n\n  let {\n    results = 50,\n    nationalities = []\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setUsers = useSetRecoilState(usersState);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"randomUsersData\", results, nationalities], () => axios.get(`https://randomuser.me/api/?inc=name,nat,picture,email,phone&results=${results}&page?&nat=${nationalities.join(\",\").toLowerCase()}`).then(res => res.data).catch(err => err.response));\n  useEffect(() => {\n    if (isLoading) {\n      setUsers(users => {\n        return { ...users,\n          loading: true,\n          error: error\n        };\n      });\n    } else {\n      if (error) setUsers({ ...data,\n        loading: false,\n        error: error\n      });else setUsers({ ...data,\n        loading: false,\n        error: null\n      });\n    }\n  }, [isLoading]);\n};\n\n_s(useGetUsers, \"tlxA0jLIeIJbGwvVMze3MIYSmSI=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetUsers;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/hooks/useGetUsers.ts"],"names":["axios","useEffect","useQuery","useSetRecoilState","usersState","useGetUsers","results","nationalities","setUsers","isLoading","error","data","get","join","toLowerCase","then","res","catch","err","response","users","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;;AAQA,MAAMC,WAAW,GAAG,YAGa;AAAA;;AAAA,MAHZ;AACnBC,IAAAA,OAAO,GAAG,EADS;AAEnBC,IAAAA,aAAa,GAAG;AAFG,GAGY,uEAAP,EAAO;AAC/B,QAAMC,QAAQ,GAAGL,iBAAiB,CAACC,UAAD,CAAlC;AAEA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BT,QAAQ,CACzC,CAAC,iBAAD,EAAoBI,OAApB,EAA6BC,aAA7B,CADyC,EAEzC,MACEP,KAAK,CACFY,GADH,CAEK,uEAAsEN,OAAQ,cAAaC,aAAa,CACtGM,IADyF,CACpF,GADoF,EAEzFC,WAFyF,EAE3E,EAJrB,EAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACL,IANrB,EAOGM,KAPH,CAOUC,GAAD,IAASA,GAAG,CAACC,QAPtB,CAHuC,CAA3C;AAYAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,SAAJ,EAAe;AACbD,MAAAA,QAAQ,CAAEY,KAAD,IAAW;AAClB,eAAO,EAAE,GAAGA,KAAL;AAAYC,UAAAA,OAAO,EAAE,IAArB;AAA2BX,UAAAA,KAAK,EAAEA;AAAlC,SAAP;AACD,OAFO,CAAR;AAGD,KAJD,MAIO;AACL,UAAIA,KAAJ,EAAWF,QAAQ,CAAC,EAAE,GAAGG,IAAL;AAAWU,QAAAA,OAAO,EAAE,KAApB;AAA2BX,QAAAA,KAAK,EAAEA;AAAlC,OAAD,CAAR,CAAX,KACKF,QAAQ,CAAC,EAAE,GAAGG,IAAL;AAAWU,QAAAA,OAAO,EAAE,KAApB;AAA2BX,QAAAA,KAAK,EAAE;AAAlC,OAAD,CAAR;AACN;AACF,GATQ,EASN,CAACD,SAAD,CATM,CAAT;AAUD,CA5BD;;GAAMJ,W;UAIaF,iB,EAEkBD,Q;;;AAwBrC,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport { number } from \"yup\";\nimport usersState from \"../state/usersState\";\n\ninterface UseGetUsersInterface {\n  results?: number;\n  nationalities?: string[];\n  page?: number;\n}\n\nconst useGetUsers = ({\n  results = 50,\n  nationalities = [],\n}: UseGetUsersInterface = {}) => {\n  const setUsers = useSetRecoilState(usersState);\n\n  const { isLoading, error, data } = useQuery(\n    [\"randomUsersData\", results, nationalities],\n    () =>\n      axios\n        .get(\n          `https://randomuser.me/api/?inc=name,nat,picture,email,phone&results=${results}&page?&nat=${nationalities\n            .join(\",\")\n            .toLowerCase()}`\n        )\n        .then((res) => res.data)\n        .catch((err) => err.response)\n  );\n  useEffect(() => {\n    if (isLoading) {\n      setUsers((users) => {\n        return { ...users, loading: true, error: error };\n      });\n    } else {\n      if (error) setUsers({ ...data, loading: false, error: error });\n      else setUsers({ ...data, loading: false, error: null });\n    }\n  }, [isLoading]);\n};\n\nexport default useGetUsers;\n"]},"metadata":{},"sourceType":"module"}