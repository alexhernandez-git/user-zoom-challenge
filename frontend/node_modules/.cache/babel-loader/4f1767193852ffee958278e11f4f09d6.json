{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport usersState from \"../state/usersState\";\n\nconst useGetUsers = function () {\n  _s();\n\n  let {\n    results = 50,\n    nationalities = [],\n    page = 1\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setUsers = useSetRecoilState(usersState);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"randomUsersData\", results, nationalities, page], () => axios.get(`https://randomuser.me/api/?inc=name,nat,picture,email,phone&results=${results}&page=${page}&nat=${nationalities.join(\",\").toLowerCase()}`).then(res => res.data).catch(err => err.response));\n  setUsers(users => {\n    return { ...users,\n      loading: true,\n      error: \"HELLO\"\n    };\n  });\n};\n\n_s(useGetUsers, \"E+Ioi+GQxOJn3Rog+AYo1MlBgkM=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetUsers;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/satoshis-tech-test/src/hooks/useGetUsers.ts"],"names":["axios","useQuery","useSetRecoilState","usersState","useGetUsers","results","nationalities","page","setUsers","isLoading","error","data","get","join","toLowerCase","then","res","catch","err","response","users","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AAEA,OAAOC,UAAP,MAAuB,qBAAvB;;AASA,MAAMC,WAAW,GAAG,YAIa;AAAA;;AAAA,MAJZ;AACnBC,IAAAA,OAAO,GAAG,EADS;AAEnBC,IAAAA,aAAa,GAAG,EAFG;AAGnBC,IAAAA,IAAI,GAAG;AAHY,GAIY,uEAAP,EAAO;AAC/B,QAAMC,QAAQ,GAAGN,iBAAiB,CAACC,UAAD,CAAlC;AAEA,QAAM;AAAEM,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BV,QAAQ,CACzC,CAAC,iBAAD,EAAoBI,OAApB,EAA6BC,aAA7B,EAA4CC,IAA5C,CADyC,EAEzC,MACEP,KAAK,CACFY,GADH,CAEK,uEAAsEP,OAAQ,SAAQE,IAAK,QAAOD,aAAa,CAC7GO,IADgG,CAC3F,GAD2F,EAEhGC,WAFgG,EAElF,EAJrB,EAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACL,IANrB,EAOGM,KAPH,CAOUC,GAAD,IAASA,GAAG,CAACC,QAPtB,CAHuC,CAA3C;AAYAX,EAAAA,QAAQ,CAAEY,KAAD,IAA2B;AAClC,WAAO,EAAE,GAAGA,KAAL;AAAYC,MAAAA,OAAO,EAAE,IAArB;AAA2BX,MAAAA,KAAK,EAAE;AAAlC,KAAP;AACD,GAFO,CAAR;AAGD,CAtBD;;GAAMN,W;UAKaF,iB,EAEkBD,Q;;;AAiBrC,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport { number } from \"yup\";\nimport usersState from \"../state/usersState\";\nimport { UsersInterface } from \"../types\";\n\ninterface UseGetUsersInterface {\n  results?: number;\n  nationalities?: string[];\n  page?: number;\n}\n\nconst useGetUsers = ({\n  results = 50,\n  nationalities = [],\n  page = 1,\n}: UseGetUsersInterface = {}) => {\n  const setUsers = useSetRecoilState(usersState);\n\n  const { isLoading, error, data } = useQuery(\n    [\"randomUsersData\", results, nationalities, page],\n    () =>\n      axios\n        .get(\n          `https://randomuser.me/api/?inc=name,nat,picture,email,phone&results=${results}&page=${page}&nat=${nationalities\n            .join(\",\")\n            .toLowerCase()}`\n        )\n        .then((res) => res.data)\n        .catch((err) => err.response)\n  );\n  setUsers((users: UsersInterface) => {\n    return { ...users, loading: true, error: \"HELLO\" };\n  });\n};\n\nexport default useGetUsers;\n"]},"metadata":{},"sourceType":"module"}