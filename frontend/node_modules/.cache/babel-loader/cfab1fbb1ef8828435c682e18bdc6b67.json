{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport orgsState from \"../state/orgsState\";\n\nconst useGetOrgs = function () {\n  _s();\n\n  let {\n    results = 10\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setOrgs = useSetRecoilState(orgsState);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"orgsData\", user, results], () => axios.get(`https://api.github.com/organizations?per_page=${results}`, {\n    headers: {\n      Authorization: \"token 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\"\n    }\n  }).then(res => res.data).catch(err => err.response));\n  console.log(data, error);\n  useEffect(() => {\n    if (isLoading) {\n      setOrgs(repos => {\n        return { ...repos,\n          loading: true,\n          error: false\n        };\n      });\n    } else {\n      console.log(\"error\", error);\n      if (error) setOrgs({\n        results: data,\n        loading: false,\n        error: error\n      });else {\n        console.log(\"entra\");\n        setOrgs(repos => ({ ...repos,\n          results: data,\n          loading: false,\n          error: null\n        }));\n      }\n    }\n  }, [isLoading]);\n};\n\n_s(useGetOrgs, \"8SglQCOLDmDwrAmUsdP9w0H4qz8=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetOrgs;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/user-zoom-challenge/frontend/src/hooks/useGetOrgs.ts"],"names":["axios","useEffect","useQuery","useSetRecoilState","orgsState","useGetOrgs","results","setOrgs","isLoading","error","data","user","get","headers","Authorization","then","res","catch","err","response","console","log","repos","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAOA,MAAMC,UAAU,GAAG,YAAwC;AAAA;;AAAA,MAAvC;AAAEC,IAAAA,OAAO,GAAG;AAAZ,GAAuC,uEAAP,EAAO;AACzD,QAAMC,OAAO,GAAGJ,iBAAiB,CAACC,SAAD,CAAjC;AAEA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BR,QAAQ,CAAC,CAAC,UAAD,EAAaS,IAAb,EAAmBL,OAAnB,CAAD,EAA8B,MACvEN,KAAK,CACFY,GADH,CACQ,iDAAgDN,OAAQ,EADhE,EACmE;AAC/DO,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR;AADsD,GADnE,EAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACN,IANrB,EAOGO,KAPH,CAOUC,GAAD,IAASA,GAAG,CAACC,QAPtB,CADyC,CAA3C;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ,EAAkBD,KAAlB;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,SAAJ,EAAe;AACbD,MAAAA,OAAO,CAAEe,KAAD,IAAkB;AACxB,eAAO,EAAE,GAAGA,KAAL;AAAYC,UAAAA,OAAO,EAAE,IAArB;AAA2Bd,UAAAA,KAAK,EAAE;AAAlC,SAAP;AACD,OAFM,CAAP;AAGD,KAJD,MAIO;AACLW,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBZ,KAArB;AACA,UAAIA,KAAJ,EAAWF,OAAO,CAAC;AAAED,QAAAA,OAAO,EAAEI,IAAX;AAAiBa,QAAAA,OAAO,EAAE,KAA1B;AAAiCd,QAAAA,KAAK,EAAEA;AAAxC,OAAD,CAAP,CAAX,KACK;AACHW,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAd,QAAAA,OAAO,CAAEe,KAAD,KAAmB,EACzB,GAAGA,KADsB;AAEzBhB,UAAAA,OAAO,EAAEI,IAFgB;AAGzBa,UAAAA,OAAO,EAAE,KAHgB;AAIzBd,UAAAA,KAAK,EAAE;AAJkB,SAAnB,CAAD,CAAP;AAMD;AACF;AACF,GAlBQ,EAkBN,CAACD,SAAD,CAlBM,CAAT;AAmBD,CAjCD;;GAAMH,U;UACYF,iB,EAEmBD,Q;;;AAgCrC,eAAeG,UAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport orgsState from \"../state/orgsState\";\nimport { IOrgs } from \"../types\";\n\ninterface IUseGetOrgs {\n  results?: number;\n}\n\nconst useGetOrgs = ({ results = 10 }: IUseGetOrgs = {}) => {\n  const setOrgs = useSetRecoilState(orgsState);\n\n  const { isLoading, error, data } = useQuery([\"orgsData\", user, results], () =>\n    axios\n      .get(`https://api.github.com/organizations?per_page=${results}`, {\n        headers: {\n          Authorization: \"token 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\",\n        },\n      })\n      .then((res) => res.data)\n      .catch((err) => err.response)\n  );\n  console.log(data, error);\n  useEffect(() => {\n    if (isLoading) {\n      setOrgs((repos: IOrgs) => {\n        return { ...repos, loading: true, error: false };\n      });\n    } else {\n      console.log(\"error\", error);\n      if (error) setOrgs({ results: data, loading: false, error: error });\n      else {\n        console.log(\"entra\");\n        setOrgs((repos: IOrgs) => ({\n          ...repos,\n          results: data,\n          loading: false,\n          error: null,\n        }));\n      }\n    }\n  }, [isLoading]);\n};\n\nexport default useGetOrgs;\n"]},"metadata":{},"sourceType":"module"}