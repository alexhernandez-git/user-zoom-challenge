{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport reposState from \"../state/reposState\";\n\nconst useGetRepos = function () {\n  _s();\n\n  let {\n    results = 8,\n    org = \"facebook\",\n    sort = \"created\",\n    direction = \"asc\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setRepos = useSetRecoilState(reposState);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"reposData\", org, results, sort, direction], () => axios.get(`https://api.github.com/orgs/${org}/repos?per_page=${results}&sort=${sort}&direction=${direction}`, {\n    headers: {\n      Authorization: \"token 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\"\n    }\n  }).then(res => res.data).catch(err => err.response));\n  console.log(data, error);\n  useEffect(() => {\n    if (isLoading) {\n      setRepos(repos => {\n        return { ...repos,\n          loading: true,\n          error: false\n        };\n      });\n    } else {\n      console.log(\"error\", error);\n      if (error) setRepos({\n        results: data,\n        loading: false,\n        error: error\n      });else {\n        setRepos(repos => ({ ...repos,\n          results: data,\n          loading: false,\n          error: null\n        }));\n      }\n    }\n  }, [isLoading]);\n};\n\n_s(useGetRepos, \"25rynwHFMVJuecTAioHeBBPOyRM=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetRepos;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/user-zoom-challenge/frontend/src/hooks/useGetRepos.ts"],"names":["axios","useEffect","useQuery","useSetRecoilState","reposState","useGetRepos","results","org","sort","direction","setRepos","isLoading","error","data","get","headers","Authorization","then","res","catch","err","response","console","log","repos","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAWA,MAAMC,WAAW,GAAG,YAKK;AAAA;;AAAA,MALJ;AACnBC,IAAAA,OAAO,GAAG,CADS;AAEnBC,IAAAA,GAAG,GAAG,UAFa;AAGnBC,IAAAA,IAAI,GAAG,SAHY;AAInBC,IAAAA,SAAS,GAAG;AAJO,GAKI,uEAAP,EAAO;AACvB,QAAMC,QAAQ,GAAGP,iBAAiB,CAACC,UAAD,CAAlC;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BX,QAAQ,CACzC,CAAC,WAAD,EAAcK,GAAd,EAAmBD,OAAnB,EAA4BE,IAA5B,EAAkCC,SAAlC,CADyC,EAEzC,MACET,KAAK,CACFc,GADH,CAEK,+BAA8BP,GAAI,mBAAkBD,OAAQ,SAAQE,IAAK,cAAaC,SAAU,EAFrG,EAGI;AACEM,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR;AADX,GAHJ,EASGC,IATH,CASSC,GAAD,IAASA,GAAG,CAACL,IATrB,EAUGM,KAVH,CAUUC,GAAD,IAASA,GAAG,CAACC,QAVtB,CAHuC,CAA3C;AAeAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAAkBD,KAAlB;AACAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,SAAJ,EAAe;AACbD,MAAAA,QAAQ,CAAEc,KAAD,IAAmB;AAC1B,eAAO,EAAE,GAAGA,KAAL;AAAYC,UAAAA,OAAO,EAAE,IAArB;AAA2Bb,UAAAA,KAAK,EAAE;AAAlC,SAAP;AACD,OAFO,CAAR;AAGD,KAJD,MAIO;AACLU,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBX,KAArB;AACA,UAAIA,KAAJ,EAAWF,QAAQ,CAAC;AAAEJ,QAAAA,OAAO,EAAEO,IAAX;AAAiBY,QAAAA,OAAO,EAAE,KAA1B;AAAiCb,QAAAA,KAAK,EAAEA;AAAxC,OAAD,CAAR,CAAX,KACK;AACHF,QAAAA,QAAQ,CAAEc,KAAD,KAAoB,EAC3B,GAAGA,KADwB;AAE3BlB,UAAAA,OAAO,EAAEO,IAFkB;AAG3BY,UAAAA,OAAO,EAAE,KAHkB;AAI3Bb,UAAAA,KAAK,EAAE;AAJoB,SAApB,CAAD,CAAR;AAMD;AACF;AACF,GAjBQ,EAiBN,CAACD,SAAD,CAjBM,CAAT;AAkBD,CAzCD;;GAAMN,W;UAMaF,iB,EACkBD,Q;;;AAoCrC,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport reposState from \"../state/reposState\";\nimport { IRepos } from \"../types\";\n\ninterface IUseGetRepos {\n  results?: number;\n  page?: number;\n  org?: string;\n  sort?: string;\n  direction?: string;\n}\n\nconst useGetRepos = ({\n  results = 8,\n  org = \"facebook\",\n  sort = \"created\",\n  direction = \"asc\",\n}: IUseGetRepos = {}) => {\n  const setRepos = useSetRecoilState(reposState);\n  const { isLoading, error, data } = useQuery(\n    [\"reposData\", org, results, sort, direction],\n    () =>\n      axios\n        .get(\n          `https://api.github.com/orgs/${org}/repos?per_page=${results}&sort=${sort}&direction=${direction}`,\n          {\n            headers: {\n              Authorization: \"token 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\",\n            },\n          }\n        )\n        .then((res) => res.data)\n        .catch((err) => err.response)\n  );\n  console.log(data, error);\n  useEffect(() => {\n    if (isLoading) {\n      setRepos((repos: IRepos) => {\n        return { ...repos, loading: true, error: false };\n      });\n    } else {\n      console.log(\"error\", error);\n      if (error) setRepos({ results: data, loading: false, error: error });\n      else {\n        setRepos((repos: IRepos) => ({\n          ...repos,\n          results: data,\n          loading: false,\n          error: null,\n        }));\n      }\n    }\n  }, [isLoading]);\n};\n\nexport default useGetRepos;\n"]},"metadata":{},"sourceType":"module"}