{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport reposState from \"../state/reposState\";\n\nconst useGetRepos = function () {\n  _s();\n\n  let {\n    results = 50,\n    page = 1,\n    org = \"\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const setRepos = useSetRecoilState(reposState);\n  console.log(org);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery([\"reposData\", org, results], () => axios.get(`https://api.github.com/orgs/${org}/repos?sort`, {\n    headers: {\n      Authorization: \"token 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\"\n    }\n  }).then(res => res.data).catch(err => err.response));\n  console.log(data, error);\n  useEffect(() => {\n    if (isLoading) {\n      setRepos(repos => {\n        return { ...repos,\n          loading: true,\n          error: false\n        };\n      });\n    } else {\n      console.log(\"error\", error);\n      if (error) setRepos({\n        results: data,\n        loading: false,\n        error: error\n      });else {\n        setRepos(repos => ({ ...repos,\n          results: [...repos.results, ...data],\n          loading: false,\n          error: null\n        }));\n      }\n    }\n  }, [isLoading]);\n};\n\n_s(useGetRepos, \"25rynwHFMVJuecTAioHeBBPOyRM=\", false, function () {\n  return [useSetRecoilState, useQuery];\n});\n\nexport default useGetRepos;","map":{"version":3,"sources":["/Users/alexhernandezprat/code/user-zoom-challenge/frontend/src/hooks/useGetRepos.ts"],"names":["axios","useEffect","useQuery","useSetRecoilState","reposState","useGetRepos","results","page","org","setRepos","console","log","isLoading","error","data","get","headers","Authorization","then","res","catch","err","response","repos","loading"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AASA,MAAMC,WAAW,GAAG,YAIK;AAAA;;AAAA,MAJJ;AACnBC,IAAAA,OAAO,GAAG,EADS;AAEnBC,IAAAA,IAAI,GAAG,CAFY;AAGnBC,IAAAA,GAAG,GAAG;AAHa,GAII,uEAAP,EAAO;AACvB,QAAMC,QAAQ,GAAGN,iBAAiB,CAACC,UAAD,CAAlC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BZ,QAAQ,CAAC,CAAC,WAAD,EAAcM,GAAd,EAAmBF,OAAnB,CAAD,EAA8B,MACvEN,KAAK,CACFe,GADH,CACQ,+BAA8BP,GAAI,aAD1C,EACwD;AACpDQ,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR;AAD2C,GADxD,EAMGC,IANH,CAMSC,GAAD,IAASA,GAAG,CAACL,IANrB,EAOGM,KAPH,CAOUC,GAAD,IAASA,GAAG,CAACC,QAPtB,CADyC,CAA3C;AAUAZ,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EAAkBD,KAAlB;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,SAAJ,EAAe;AACbH,MAAAA,QAAQ,CAAEc,KAAD,IAAmB;AAC1B,eAAO,EAAE,GAAGA,KAAL;AAAYC,UAAAA,OAAO,EAAE,IAArB;AAA2BX,UAAAA,KAAK,EAAE;AAAlC,SAAP;AACD,OAFO,CAAR;AAGD,KAJD,MAIO;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB;AACA,UAAIA,KAAJ,EAAWJ,QAAQ,CAAC;AAAEH,QAAAA,OAAO,EAAEQ,IAAX;AAAiBU,QAAAA,OAAO,EAAE,KAA1B;AAAiCX,QAAAA,KAAK,EAAEA;AAAxC,OAAD,CAAR,CAAX,KACK;AACHJ,QAAAA,QAAQ,CAAEc,KAAD,KAAoB,EAC3B,GAAGA,KADwB;AAE3BjB,UAAAA,OAAO,EAAE,CAAC,GAAGiB,KAAK,CAACjB,OAAV,EAAmB,GAAGQ,IAAtB,CAFkB;AAG3BU,UAAAA,OAAO,EAAE,KAHkB;AAI3BX,UAAAA,KAAK,EAAE;AAJoB,SAApB,CAAD,CAAR;AAMD;AACF;AACF,GAjBQ,EAiBN,CAACD,SAAD,CAjBM,CAAT;AAkBD,CApCD;;GAAMP,W;UAKaF,iB,EAEkBD,Q;;;AA+BrC,eAAeG,WAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSetRecoilState } from \"recoil\";\nimport reposState from \"../state/reposState\";\nimport { IRepos } from \"../types\";\n\ninterface IUseGetRepos {\n  results?: number;\n  page?: number;\n  org?: string;\n}\n\nconst useGetRepos = ({\n  results = 50,\n  page = 1,\n  org = \"\",\n}: IUseGetRepos = {}) => {\n  const setRepos = useSetRecoilState(reposState);\n  console.log(org);\n  const { isLoading, error, data } = useQuery([\"reposData\", org, results], () =>\n    axios\n      .get(`https://api.github.com/orgs/${org}/repos?sort`, {\n        headers: {\n          Authorization: \"token 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\",\n        },\n      })\n      .then((res) => res.data)\n      .catch((err) => err.response)\n  );\n  console.log(data, error);\n  useEffect(() => {\n    if (isLoading) {\n      setRepos((repos: IRepos) => {\n        return { ...repos, loading: true, error: false };\n      });\n    } else {\n      console.log(\"error\", error);\n      if (error) setRepos({ results: data, loading: false, error: error });\n      else {\n        setRepos((repos: IRepos) => ({\n          ...repos,\n          results: [...repos.results, ...data],\n          loading: false,\n          error: null,\n        }));\n      }\n    }\n  }, [isLoading]);\n};\n\nexport default useGetRepos;\n"]},"metadata":{},"sourceType":"module"}